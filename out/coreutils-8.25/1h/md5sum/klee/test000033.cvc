n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin9  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr110  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr714  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr815  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr916  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1219  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1320  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1621  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1822  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1923  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2024  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2125  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2226  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2327  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2428  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2529  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2630  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2731  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2932  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3033  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3234  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3335  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3436  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3737  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3838  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3939  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4040  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4141  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4342  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4743  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4844  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4945  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5246  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5647  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5748  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5849  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6050  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6251  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6452  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6653  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6754  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6855  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7156  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7357  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7458  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7559  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7660  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7761  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7862  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7963  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8064  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8165  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8366  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8467  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8868  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9069  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9170  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9271  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9372  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9573  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9874  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9975  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data76  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10177  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10278  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10379  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10480  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg008[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg008[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg008[0x00000001]
))) );
ASSERT( (0x63 = BVSX(arg008[0x00000001],32)
[7:0]
) );
ASSERT( ( NOT( (0x0A = stdin9[0x00000000]
))) );
ASSERT( ( NOT( (0x0A = stdin9[0x00000001]
))) );
ASSERT( ( NOT( (0x0A = stdin9[0x00000002]
))) );
ASSERT( ( NOT( (0x0A = stdin9[0x00000003]
))) );
ASSERT( ( NOT( (0x0A = stdin9[0x00000004]
))) );
ASSERT( ( NOT( (0x0A = stdin9[0x00000005]
))) );
ASSERT( ( NOT( (0x0A = stdin9[0x00000006]
))) );
ASSERT( ( NOT( (0x0A = stdin9[0x00000007]
))) );
ASSERT( (0x23 = stdin9[0x00000000]
) );
%----------------------------------------------------
QUERY( FALSE  );
