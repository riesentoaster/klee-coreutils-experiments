n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin9  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr110  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr211  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr312  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr413  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr514  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr615  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr716  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr817  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr918  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1019  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1120  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1221  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1322  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1423  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1524  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1625  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1726  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1827  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1928  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2029  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2130  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2231  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2332  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2433  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2534  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2635  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2736  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2837  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2938  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x20 = arg005[0x00000000]
) );
ASSERT( ( NOT( (0x2B = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x20 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000001]
))) );
ASSERT( ( NOT( BVGT(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000001],32)
)
,0x00000009)
)) );
ASSERT( (0x00 = arg005[0x00000002]
) );
ASSERT( (LET let_k_0 = (0x00000000 @ BVPLUS(64, 
0x00000000FFFFFFD0, 
BVSX(arg005[0x00000001],64)
)
[31:0]
) IN 
( NOT( (( NOT( BVGT((0x0000000000000000 @ let_k_0
),0x0000000000000000FFFFFFFFFFFFFFFF)
)) AND BVGT(0x0000000000000002,let_k_0)

))))  );
ASSERT( ( NOT( (0b0 = BVPLUS(64, 
0x00000000FFFFFFD0, 
BVSX(arg005[0x00000001],64)
)
[0:0]
))) );
ASSERT( (LET let_k_0 = BVPLUS(64, 
0x00000000FFFFFFD0, 
BVSX(arg005[0x00000001],64)
)
,
let_k_1 = (0x00000000 @ let_k_0[31:0]
) IN 
BVGT(BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
(let_k_0[0:0] @ 0b000000000000000000000000000000000000000000000000000000000000000
), 
(let_k_0[2:0] @ 0b0000000000000000000000000000000000000000000000000000000000000
))
, 
(let_k_0[4:0] @ 0b00000000000000000000000000000000000000000000000000000000000
))
, 
(let_k_0[6:0] @ 0b000000000000000000000000000000000000000000000000000000000
))
, 
(let_k_0[8:0] @ 0b0000000000000000000000000000000000000000000000000000000
))
, 
(let_k_0[10:0] @ 0b00000000000000000000000000000000000000000000000000000
))
, 
(let_k_0[12:0] @ 0b000000000000000000000000000000000000000000000000000
))
, 
(let_k_0[14:0] @ 0b0000000000000000000000000000000000000000000000000
))
, 
(let_k_0[16:0] @ 0b00000000000000000000000000000000000000000000000
))
, 
(let_k_0[18:0] @ 0b000000000000000000000000000000000000000000000
))
, 
(let_k_0[20:0] @ 0b0000000000000000000000000000000000000000000
))
, 
(let_k_0[22:0] @ 0b00000000000000000000000000000000000000000
))
, 
(let_k_0[24:0] @ 0b000000000000000000000000000000000000000
))
, 
(let_k_0[26:0] @ 0b0000000000000000000000000000000000000
))
, 
(let_k_0[28:0] @ 0b00000000000000000000000000000000000
))
, 
(let_k_0[30:0] @ 0b000000000000000000000000000000000
))
, 
(let_k_1[32:0] @ 0b0000000000000000000000000000000
))
, 
(let_k_1[34:0] @ 0b00000000000000000000000000000
))
, 
(let_k_1[36:0] @ 0b000000000000000000000000000
))
, 
(let_k_1[38:0] @ 0b0000000000000000000000000
))
, 
(let_k_1[40:0] @ 0b00000000000000000000000
))
, 
(let_k_1[42:0] @ 0b000000000000000000000
))
, 
(let_k_1[44:0] @ 0b0000000000000000000
))
, 
(let_k_1[46:0] @ 0b00000000000000000
))
, 
(let_k_1[48:0] @ 0b000000000000000
))
, 
(let_k_1[50:0] @ 0b0000000000000
))
, 
(let_k_1[52:0] @ 0b00000000000
))
, 
(let_k_1[54:0] @ 0b000000000
))
, 
(let_k_1[56:0] @ 0b0000000
))
, 
(let_k_1[58:0] @ 0b00000
))
, 
(let_k_1[60:0] @ 0b000
))
, 
(let_k_1[61:0] @ 0b00
))
, 
( BVUMINUS( let_k_1)))
,0x5555555555555555)
)  );
ASSERT( (LET let_k_0 = BVPLUS(64, 
0x00000000FFFFFFD0, 
BVSX(arg005[0x00000001],64)
)
,
let_k_1 = let_k_0[31:0],
let_k_2 = (0x00000000 @ let_k_1
) IN 
BVGT(BVPLUS(64, 
let_k_2, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
BVPLUS(64, 
( BVUMINUS( (let_k_0[1:0] @ 0b00000000000000000000000000000000000000000000000000000000000000
))), 
(let_k_0[3:0] @ 0x000000000000000
))
, 
( BVUMINUS( (let_k_0[5:0] @ 0b0000000000000000000000000000000000000000000000000000000000
))))
, 
(let_k_0[7:0] @ 0x00000000000000
))
, 
( BVUMINUS( (let_k_0[9:0] @ 0b000000000000000000000000000000000000000000000000000000
))))
, 
(let_k_0[11:0] @ 0x0000000000000
))
, 
( BVUMINUS( (let_k_0[13:0] @ 0b00000000000000000000000000000000000000000000000000
))))
, 
(let_k_0[15:0] @ 0x000000000000
))
, 
( BVUMINUS( (let_k_0[17:0] @ 0b0000000000000000000000000000000000000000000000
))))
, 
(let_k_0[19:0] @ 0x00000000000
))
, 
( BVUMINUS( (let_k_0[21:0] @ 0b000000000000000000000000000000000000000000
))))
, 
(let_k_0[23:0] @ 0x0000000000
))
, 
( BVUMINUS( (let_k_0[25:0] @ 0b00000000000000000000000000000000000000
))))
, 
(let_k_0[27:0] @ 0x000000000
))
, 
( BVUMINUS( (let_k_0[29:0] @ 0b0000000000000000000000000000000000
))))
, 
(let_k_1 @ 0x00000000
))
, 
( BVUMINUS( (let_k_2[33:0] @ 0b000000000000000000000000000000
))))
, 
(let_k_2[35:0] @ 0x0000000
))
, 
( BVUMINUS( (let_k_2[37:0] @ 0b00000000000000000000000000
))))
, 
(let_k_2[39:0] @ 0x000000
))
, 
( BVUMINUS( (let_k_2[41:0] @ 0b0000000000000000000000
))))
, 
(let_k_2[43:0] @ 0x00000
))
, 
( BVUMINUS( (let_k_2[45:0] @ 0b000000000000000000
))))
, 
(let_k_2[47:0] @ 0x0000
))
, 
( BVUMINUS( (let_k_2[49:0] @ 0b00000000000000
))))
, 
(let_k_2[51:0] @ 0x000
))
, 
( BVUMINUS( (let_k_2[53:0] @ 0b0000000000
))))
, 
(let_k_2[55:0] @ 0x00
))
, 
( BVUMINUS( (let_k_2[57:0] @ 0b000000
))))
, 
(let_k_2[59:0] @ 0x0
))
, 
( BVUMINUS( (let_k_2[61:0] @ 0b00
))))
)
,0x3333333333333333)
)  );
%----------------------------------------------------
QUERY( FALSE  );
