n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr614  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr715  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2B = arg005[0x00000000]
) );
ASSERT( (0x25 = arg005[0x00000001]
) );
ASSERT( ( NOT( (0x5E = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x5F = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x23 = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x30 = arg005[0x00000002]
))) );
ASSERT( ( NOT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000002],32)
)
)
)) );
ASSERT( (LET let_k_0 = arg005[0x00000002] IN 
((0x4F = let_k_0
) OR (0x45 = let_k_0
)
))  );
ASSERT( (0x61 = arg005[0x00000003]
) );
ASSERT( (0x25 = arg005[0x00000004]
) );
ASSERT( (0x5E = arg005[0x00000005]
) );
ASSERT( (0x5E = arg005[0x00000006]
) );
ASSERT( ( NOT( (0x5E = arg005[0x00000007]
))) );
ASSERT( ( NOT( (0x5F = arg005[0x00000007]
))) );
ASSERT( ( NOT( (0x23 = arg005[0x00000007]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000007]
))) );
ASSERT( ( NOT( (0x30 = arg005[0x00000007]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000007],32)
)
)
 );
ASSERT( (0x67 = arg005[0x00000008]
) );
ASSERT( (LET let_k_0 = BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000007],32)
)
 IN 
SBVGT(BVPLUS(64, 
0xFFFFFFFFFFFFFFFE, 
BVSX(IF(SBVGT(let_k_0,0x00000002)
)
THEN let_k_0
ELSE 0x00000002
ENDIF,64)
)
[31:0],0x00000000)
)  );
ASSERT( (LET let_k_0 = BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000007],32)
)
,
let_k_1 = BVPLUS(64, 
0xFFFFFFFFFFFFFFFE, 
(0x00000000 @ IF(SBVGT(0x00000002,let_k_0)
)
THEN 0x00000002
ELSE let_k_0
ENDIF
))
,
let_k_2 = let_k_1[31:0] IN 
(0x0000000000000001 = IF((0b1 = let_k_1[31:31]
))
THEN (0xFFFFFFFF @ let_k_2
)
ELSE (0x00000000 @ let_k_2
)
ENDIF
))  );
ASSERT( (0x00 = arg005[0x00000009]
) );
%----------------------------------------------------
QUERY( FALSE  );
