n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg004  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr28  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr39  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr410  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat2[0x0000000B] @ (stdin_stat2[0x0000000A] @ (stdin_stat2[0x00000009] @ stdin_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat2[0x0000003F] @ (stdin_stat2[0x0000003E] @ (stdin_stat2[0x0000003D] @ (stdin_stat2[0x0000003C] @ (stdin_stat2[0x0000003B] @ (stdin_stat2[0x0000003A] @ (stdin_stat2[0x00000039] @ stdin_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat3[0x0000000B] @ (stdout_stat3[0x0000000A] @ (stdout_stat3[0x00000009] @ stdout_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat3[0x0000003F] @ (stdout_stat3[0x0000003E] @ (stdout_stat3[0x0000003D] @ (stdout_stat3[0x0000003C] @ (stdout_stat3[0x0000003B] @ (stdout_stat3[0x0000003A] @ (stdout_stat3[0x00000039] @ stdout_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x3D = arg004[0x00000003]
) );
ASSERT( (0x69 = arg004[0x00000000]
) );
ASSERT( (0x2B = arg004[0x00000004]
) );
ASSERT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg004[0x00000005],32)
)
[7:0]
),0x00000009)
 );
ASSERT( ( NOT( SBVGT(0x00000041,BVSX(arg004[0x00000005],32)
)
)) );
ASSERT( SBVGT(0x0000000A,(0x000000 @ BVPLUS(32, 
0xFFFFFFA9, 
(0x00000020 | BVSX(arg004[0x00000005],32)

))
[7:0]
))
 );
ASSERT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg004[0x00000006],32)
)
[7:0]
),0x00000009)
 );
ASSERT( ( NOT( SBVGT(0x00000041,BVSX(arg004[0x00000006],32)
)
)) );
ASSERT( ( NOT( SBVGT(0x0000000A,(0x000000 @ BVPLUS(32, 
0xFFFFFFA9, 
(0x00000020 | BVSX(arg004[0x00000006],32)

))
[7:0]
))
)) );
ASSERT( (0x45 = BVSX(arg004[0x00000006],32)
[7:0]
) );
ASSERT( (0x69 = arg004[0x00000007]
) );
ASSERT( (LET let_k_0 = (0x00000000000000 @ BVPLUS(32, 
0xFFFFFFA9, 
(0x00000020 | BVSX(arg004[0x00000005],32)

))
[7:0]
),
let_k_1 = IF(BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_0
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0xFFFFFFFFFFFFFFFF
ELSE (let_k_0[53:0] @ 0b0000000000
)
ENDIF,
let_k_2 = IF(BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_1
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0xFFFFFFFFFFFFFFFF
ELSE (let_k_1[53:0] @ 0b0000000000
)
ENDIF,
let_k_3 = IF(BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_2
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0xFFFFFFFFFFFFFFFF
ELSE (let_k_2[53:0] @ 0b0000000000
)
ENDIF,
let_k_4 = IF(BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_3
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0xFFFFFFFFFFFFFFFF
ELSE (let_k_3[53:0] @ 0b0000000000
)
ENDIF,
let_k_5 = BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_4
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
,
let_k_6 = BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_3
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
,
let_k_7 = BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_2
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
,
let_k_8 = BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_1
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
,
let_k_9 = BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ let_k_0
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
,
let_k_10 = (IF(BVGT(BVMULT(128, 
0x00000000000000000000000000000400, 
(0x0000000000000000 @ IF(let_k_5)
THEN 0xFFFFFFFFFFFFFFFF
ELSE (let_k_4[53:0] @ 0b0000000000
)
ENDIF
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0x00000001
ELSE 0x00000000
ENDIF | (IF(let_k_5)
THEN 0x00000001
ELSE 0x00000000
ENDIF | (IF(let_k_6)
THEN 0x00000001
ELSE 0x00000000
ENDIF | (IF(let_k_7)
THEN 0x00000001
ELSE 0x00000000
ENDIF | (IF(let_k_8)
THEN 0x00000001
ELSE 0x00000000
ENDIF | IF(let_k_9)
THEN 0x00000001
ELSE 0x00000000
ENDIF
)
)
)
)
) IN 
(0x00000000 = IF((0x00 = (arg004 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0x0000000000000006, 
IF((0x42 = arg004[0x00000008]
))
THEN 0x0000000000000003
ELSE 0x0000000000000001
ENDIF)
[31:0]]
))
THEN let_k_10
ELSE (0x00000002 | let_k_10
)
ENDIF
))  );
ASSERT( (0x62 = arg004[0x00000001]
) );
ASSERT( (0x73 = arg004[0x00000002]
) );
%----------------------------------------------------
QUERY( FALSE  );
