n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr310  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr614  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr715  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr917  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1018  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1220  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1421  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1522  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1623  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1825  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2026  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2127  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2328  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2429  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2630  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2731  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2832  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2933  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3034  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3235  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3436  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3537  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3638  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3739  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3840  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3941  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4042  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4143  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4244  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4345  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4546  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4647  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4748  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4849  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4950  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5051  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5152  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5253  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5354  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5455  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5556  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5657  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5758  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5859  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5960  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6061  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6162  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6263  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6364  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6465  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6766  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6967  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7168  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7269  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7370  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7471  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7572  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7673  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7774  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7975  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8076  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8177  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8278  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8379  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8480  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8581  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8682  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8783  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8884  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8985  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9186  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9287  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9388  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9589  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9690  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9791  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9992  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10093  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10194  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10295  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10396  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10497  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10698  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10799  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000004,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
))) );
ASSERT( ( NOT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg028[0x00000000]
) );
ASSERT( (0x00 = arg028[0x00000001]
) );
ASSERT( (0x00 = arg005[0x00000001]
) );
ASSERT( (0x41 = arg005[0x00000000]
) );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((((((((((((((((((((((((((const_arr310 WITH [0x00000000] := 0x0C)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [0x00000006] := 0xAB)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xB0)
 WITH [0x00000009] := 0x07)
 WITH [0x0000000A] := 0x29)
 WITH [0x0000000B] := 0xB4)
 WITH [0x0000000C] := 0xF3)
 WITH [0x0000000D] := 0x55)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x20)
 WITH [0x00000011] := 0xDC)
 WITH [0x00000012] := 0xD2)
 WITH [0x00000013] := 0xB1)
 WITH [0x00000014] := 0xF3)
 WITH [0x00000015] := 0x55)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x0C)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0xAB)
 WITH [0x0000001D] := 0xAB)
 WITH [0x0000001E] := 0xAB)
 WITH [0x0000001F] := 0xAB)
 WITH [0x00000020] := 0x20)
 WITH [0x00000021] := 0x07)
 WITH [0x00000022] := 0x29)
 WITH [0x00000023] := 0xB4)
 WITH [0x00000024] := 0xF3)
 WITH [0x00000025] := 0x55)
 WITH [0x00000026] := 0x00)
 WITH [0x00000027] := 0x00)
 WITH [0x00000028] := 0x20)
 WITH [0x00000029] := 0xAA)
 WITH [0x0000002A] := 0xD9)
 WITH [0x0000002B] := 0xB1)
 WITH [0x0000002C] := 0xF3)
 WITH [0x0000002D] := 0x55)
 WITH [0x0000002E] := 0x00)
 WITH [0x0000002F] := 0x00)
,
let_k_1 = BVPLUS(64, 
0xFFFFAA0C4C0A5950, 
IF(((((((((0x00 = A_data_stat1[0x00000008]
) AND (0x00 = A_data_stat1[0x00000009]
)
) AND (0x00 = A_data_stat1[0x0000000A]
)
) AND (0x00 = A_data_stat1[0x0000000B]
)
) AND (0x00 = A_data_stat1[0x0000000C]
)
) AND (0x00 = A_data_stat1[0x0000000D]
)
) AND (0x00 = A_data_stat1[0x0000000E]
)
) AND (0x00 = A_data_stat1[0x0000000F]
)
))
THEN 0x0000000000000000
ELSE 0x000055F3B3F5A6C0
ENDIF)
[31:0] IN 
(0x2 = ((((((((((((((((A_data_stat1 WITH [0x00000030] := 0x0C)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000040] := 0x08)
 WITH [0x00000041] := 0x00)
 WITH [0x00000042] := 0x00)
 WITH [0x00000043] := 0x00)
 WITH [0x00000044] := 0x00)
 WITH [0x00000045] := 0x00)
 WITH [0x00000046] := 0x00)
 WITH [0x00000047] := 0x00)
[BVPLUS(32, 
0x00000001, 
BVPLUS(64, 
0xFFFFAA0C4E2D23F8, 
(let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
))
[31:0])
][7:4]
))  );
ASSERT( (0x00 = arg017[0x00000000]
) );
%----------------------------------------------------
QUERY( FALSE  );
