n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data14  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr615  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr917  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1018  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1220  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1321  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1422  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1523  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1624  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1725  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1826  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1927  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2129  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2330  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2431  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2532  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2633  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2734  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2835  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2936  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3037  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3138  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2239  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3240  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3341  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3442  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3543  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3644  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3745  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3846  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3947  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4048  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4149  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4250  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4351  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4452  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4553  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4654  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4755  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4856  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4957  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5058  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5159  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5260  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5361  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5462  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5563  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5664  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5765  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5866  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5967  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6068  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6169  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6270  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6371  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6472  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6573  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6674  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6775  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6876  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6977  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7078  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7179  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7380  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7581  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7482  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7683  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7784  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7885  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7986  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8087  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8288  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8389  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8490  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8591  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8692  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8793  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8894  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8995  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9096  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9197  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9298  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9399  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr94100  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr95101  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr96102  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr97103  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr98104  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr99105  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr100106  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr101107  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr102108  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr103109  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr104110  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr105111  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr106112  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr107113  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr108114  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr109115  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr111116  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr112117  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr113118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000001]
))) );
ASSERT( (0x64 = BVSX(arg005[0x00000001],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000002]
))) );
ASSERT( ( NOT( BVGT(0x00000018,BVPLUS(32, 
0xFFFFFFF7, 
(0x000000 @ arg005[0x00000002]
))
)
)) );
ASSERT( ( NOT( (0x54 = arg005[0x00000002]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ arg005[0x00000002]
))
)
 );
ASSERT( ( NOT( (0x2B = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000002]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ arg005[0x00000003]
))
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ arg005[0x00000004]
))
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ arg005[0x00000005]
))
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ arg005[0x00000006]
))
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ arg005[0x00000007]
))
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ arg005[0x00000008]
))
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ arg005[0x00000009]
))
)
 );
ASSERT( (LET let_k_0 = BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000002]
))
,
let_k_1 = BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000003]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_0[60:0] @ 0b000
), 
(let_k_0[62:0] @ 0b0
))

))
,
let_k_2 = BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000004]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_1[60:0] @ 0b000
), 
(let_k_1[62:0] @ 0b0
))

))
,
let_k_3 = BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000005]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_2[60:0] @ 0b000
), 
(let_k_2[62:0] @ 0b0
))

))
,
let_k_4 = BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000006]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_3[60:0] @ 0b000
), 
(let_k_3[62:0] @ 0b0
))

))
,
let_k_5 = BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000007]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_4[60:0] @ 0b000
), 
(let_k_4[62:0] @ 0b0
))

))
,
let_k_6 = BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000008]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_5[60:0] @ 0b000
), 
(let_k_5[62:0] @ 0b0
))

))
,
let_k_7 = SBVREM(32, 
BVPLUS(32, 
0xFFFFFFFF, 
SBVREM(64, 
SBVDIV(64, 
BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000009]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_6[60:0] @ 0b000
), 
(let_k_6[62:0] @ 0b0
))

))
[63:0], 
0x0000000000000064)
, 
0x0000000000000064)
[31:0])
, 
0x0000000C)
[31:31],
let_k_8 = BVPLUS(32, 
0xFFFFFFFF, 
SBVREM(64, 
SBVDIV(64, 
BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000009]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_6[60:0] @ 0b000
), 
(let_k_6[62:0] @ 0b0
))

))
[63:0], 
0x0000000000000064)
, 
0x0000000000000064)
[31:0])
,
let_k_9 = BVPLUS(128, 
(0x0000000000000000 @ BVPLUS(64, 
0xFFFFFFFFFFFFFFD0, 
(0x00000000000000 @ arg005[0x00000009]
))

), 
(0x0000000000000000 @ BVPLUS(64, 
(let_k_6[60:0] @ 0b000
), 
(let_k_6[62:0] @ 0b0
))

))
[63:0] IN 
( NOT( (0b00 = BVPLUS(64, 
BVSX(BVPLUS(32, 
IF((0b1 = let_k_7
))
THEN (0b1111111111111111111111111111111 @ let_k_7
)
ELSE (0b0000000000000000000000000000000 @ let_k_7
)
ENDIF, 
SBVDIV(32, 
let_k_8, 
0x0000000C)
)
,64)
, 
BVSX(BVPLUS(32, 
0xFFFFF894, 
SBVDIV(64, 
let_k_9, 
0x0000000000002710)
[31:0])
,64)
)
[1:0]
))))  );
%----------------------------------------------------
QUERY( FALSE  );
