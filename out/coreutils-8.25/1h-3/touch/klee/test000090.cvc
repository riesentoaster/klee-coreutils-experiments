n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr614  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr715  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr917  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1018  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1220  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1321  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1422  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1523  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1624  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1725  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1926  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2128  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2229  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2330  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2431  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2532  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2733  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2934  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2835  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3036  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3137  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3238  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3339  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3440  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3541  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3642  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg008[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg008[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg008[0x00000001]
))) );
ASSERT( (0x64 = BVSX(arg008[0x00000001],32)
[7:0]
) );
ASSERT( BVGT(0x00000018,BVPLUS(32, 
0xFFFFFFF7, 
(0x000000 @ arg016[0x00000000]
))
)
 );
ASSERT( (LET let_k_0 = BVPLUS(32, 
0xFFFFFFF7, 
(0x000000 @ arg016[0x00000000]
))
,
let_k_1 = let_k_0[4:0] IN 
( NOT( (0b0 = IF(BVGT(0x000018,let_k_0[23:0])
)
THEN IF((0b00000 = let_k_1
))
THEN 0x80001F
ELSE IF((0b00001 = let_k_1
))
THEN 0x40000F
ELSE IF((0b00010 = let_k_1
))
THEN 0x200007
ELSE IF((0b00011 = let_k_1
))
THEN 0x100003
ELSE IF((0b00100 = let_k_1
))
THEN 0x080001
ELSE IF((0b00101 = let_k_1
))
THEN 0x040000
ELSE IF((0b00110 = let_k_1
))
THEN 0x020000
ELSE IF((0b00111 = let_k_1
))
THEN 0x010000
ELSE IF((0b01000 = let_k_1
))
THEN 0x008000
ELSE IF((0b01001 = let_k_1
))
THEN 0x004000
ELSE IF((0b01010 = let_k_1
))
THEN 0x002000
ELSE IF((0b01011 = let_k_1
))
THEN 0x001000
ELSE IF((0b01100 = let_k_1
))
THEN 0x000800
ELSE IF((0b01101 = let_k_1
))
THEN 0x000400
ELSE IF((0b01110 = let_k_1
))
THEN 0x000200
ELSE IF((0b01111 = let_k_1
))
THEN 0x000100
ELSE IF((0b10000 = let_k_1
))
THEN 0x000080
ELSE IF((0b10001 = let_k_1
))
THEN 0x000040
ELSE IF((0b10010 = let_k_1
))
THEN 0x000020
ELSE IF((0b10011 = let_k_1
))
THEN 0x000010
ELSE IF((0b10100 = let_k_1
))
THEN 0x000008
ELSE IF((0b10101 = let_k_1
))
THEN 0x000004
ELSE IF((0b10110 = let_k_1
))
THEN 0x000002
ELSE IF((0b10111 = let_k_1
))
THEN 0x000001
ELSE 0x000000
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ELSE 0x000000
ENDIF[0:0]
))))  );
ASSERT( ( NOT( BVGT(0x00000018,BVPLUS(32, 
0xFFFFFFF7, 
(0x000000 @ arg016[0x00000001]
))
)
)) );
ASSERT( ( NOT( (0x54 = arg016[0x00000001]
))) );
ASSERT( ( NOT( BVGT(0x0000000000000002,BVPLUS(64, 
0xFFFFAA20E20C7E48, 
IF((0x00 = arg016[0x00000001]
))
THEN 0x000055DF1DF381B8
ELSE 0x000055DF1DF39B59
ENDIF)
)
)) );
ASSERT( ( NOT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
(0x000000 @ (arg016 WITH [0x00000002] := 0x00)
[BVPLUS(64, 
0xFFFFAA20E20C64A8, 
IF((0x00 = arg016[0x00000001]
))
THEN 0x000055DF1DF381B8
ELSE 0x000055DF1DF39B59
ENDIF)
[31:0]]
))
)
)) );
ASSERT( ( NOT( (0x2B = (arg016 WITH [0x00000002] := 0x00)
[BVPLUS(64, 
0xFFFFAA20E20C64A8, 
IF((0x00 = arg016[0x00000001]
))
THEN 0x000055DF1DF381B8
ELSE 0x000055DF1DF39B59
ENDIF)
[31:0]]
))) );
ASSERT( ( NOT( (0x2D = (arg016 WITH [0x00000002] := 0x00)
[BVPLUS(64, 
0xFFFFAA20E20C64A8, 
IF((0x00 = arg016[0x00000001]
))
THEN 0x000055DF1DF381B8
ELSE 0x000055DF1DF39B59
ENDIF)
[31:0]]
))) );
ASSERT( BVGT(0x0000003A,BVPLUS(32, 
0xFFFFFFBF, 
(0x000000 @ (arg016 WITH [0x00000002] := 0x00)
[BVPLUS(64, 
0xFFFFAA20E20C64A8, 
IF((0x00 = arg016[0x00000001]
))
THEN 0x000055DF1DF381B8
ELSE 0x000055DF1DF39B59
ENDIF)
[31:0]]
))
)
 );
ASSERT( (LET let_k_0 = BVPLUS(32, 
0xFFFFFFBF, 
(0x000000 @ (arg016 WITH [0x00000002] := 0x00)
[BVPLUS(64, 
0xFFFFAA20E20C64A8, 
IF((0x00 = arg016[0x00000001]
))
THEN 0x000055DF1DF381B8
ELSE 0x000055DF1DF39B59
ENDIF)
[31:0]]
))
,
let_k_1 = let_k_0[5:0] IN 
( NOT( (0b0 = IF(BVGT(0b0000000000000000000000000000000000000000000000000000111010,(0b00000000000000000000000000 @ let_k_0
))
)
THEN IF((0b000000 = let_k_1
))
THEN 0b1111111111111111111111111100000011111111111111111111111111
ELSE IF((0b000001 = let_k_1
))
THEN 0b0111111111111111111111111110000001111111111111111111111111
ELSE IF((0b000010 = let_k_1
))
THEN 0b0011111111111111111111111111000000111111111111111111111111
ELSE IF((0b000011 = let_k_1
))
THEN 0b0001111111111111111111111111100000011111111111111111111111
ELSE IF((0b000100 = let_k_1
))
THEN 0b0000111111111111111111111111110000001111111111111111111111
ELSE IF((0b000101 = let_k_1
))
THEN 0b0000011111111111111111111111111000000111111111111111111111
ELSE IF((0b000110 = let_k_1
))
THEN 0b0000001111111111111111111111111100000011111111111111111111
ELSE IF((0b000111 = let_k_1
))
THEN 0b0000000111111111111111111111111110000001111111111111111111
ELSE IF((0b001000 = let_k_1
))
THEN 0b0000000011111111111111111111111111000000111111111111111111
ELSE IF((0b001001 = let_k_1
))
THEN 0b0000000001111111111111111111111111100000011111111111111111
ELSE IF((0b001010 = let_k_1
))
THEN 0b0000000000111111111111111111111111110000001111111111111111
ELSE IF((0b001011 = let_k_1
))
THEN 0b0000000000011111111111111111111111111000000111111111111111
ELSE IF((0b001100 = let_k_1
))
THEN 0b0000000000001111111111111111111111111100000011111111111111
ELSE IF((0b001101 = let_k_1
))
THEN 0b0000000000000111111111111111111111111110000001111111111111
ELSE IF((0b001110 = let_k_1
))
THEN 0b0000000000000011111111111111111111111111000000111111111111
ELSE IF((0b001111 = let_k_1
))
THEN 0b0000000000000001111111111111111111111111100000011111111111
ELSE IF((0b010000 = let_k_1
))
THEN 0b0000000000000000111111111111111111111111110000001111111111
ELSE IF((0b010001 = let_k_1
))
THEN 0b0000000000000000011111111111111111111111111000000111111111
ELSE IF((0b010010 = let_k_1
))
THEN 0b0000000000000000001111111111111111111111111100000011111111
ELSE IF((0b010011 = let_k_1
))
THEN 0b0000000000000000000111111111111111111111111110000001111111
ELSE IF((0b010100 = let_k_1
))
THEN 0b0000000000000000000011111111111111111111111111000000111111
ELSE IF((0b010101 = let_k_1
))
THEN 0b0000000000000000000001111111111111111111111111100000011111
ELSE IF((0b010110 = let_k_1
))
THEN 0b0000000000000000000000111111111111111111111111110000001111
ELSE IF((0b010111 = let_k_1
))
THEN 0b0000000000000000000000011111111111111111111111111000000111
ELSE IF((0b011000 = let_k_1
))
THEN 0b0000000000000000000000001111111111111111111111111100000011
ELSE IF((0b011001 = let_k_1
))
THEN 0b0000000000000000000000000111111111111111111111111110000001
ELSE IF((0b011010 = let_k_1
))
THEN 0b0000000000000000000000000011111111111111111111111111000000
ELSE IF((0b011011 = let_k_1
))
THEN 0b0000000000000000000000000001111111111111111111111111100000
ELSE IF((0b011100 = let_k_1
))
THEN 0b0000000000000000000000000000111111111111111111111111110000
ELSE IF((0b011101 = let_k_1
))
THEN 0b0000000000000000000000000000011111111111111111111111111000
ELSE IF((0b011110 = let_k_1
))
THEN 0b0000000000000000000000000000001111111111111111111111111100
ELSE IF((0b011111 = let_k_1
))
THEN 0b0000000000000000000000000000000111111111111111111111111110
ELSE IF((0b100000 = let_k_1
))
THEN 0b0000000000000000000000000000000011111111111111111111111111
ELSE IF((0b100001 = let_k_1
))
THEN 0b0000000000000000000000000000000001111111111111111111111111
ELSE IF((0b100010 = let_k_1
))
THEN 0b0000000000000000000000000000000000111111111111111111111111
ELSE IF((0b100011 = let_k_1
))
THEN 0b0000000000000000000000000000000000011111111111111111111111
ELSE IF((0b100100 = let_k_1
))
THEN 0b0000000000000000000000000000000000001111111111111111111111
ELSE IF((0b100101 = let_k_1
))
THEN 0b0000000000000000000000000000000000000111111111111111111111
ELSE IF((0b100110 = let_k_1
))
THEN 0b0000000000000000000000000000000000000011111111111111111111
ELSE IF((0b100111 = let_k_1
))
THEN 0b0000000000000000000000000000000000000001111111111111111111
ELSE IF((0b101000 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000111111111111111111
ELSE IF((0b101001 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000011111111111111111
ELSE IF((0b101010 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000001111111111111111
ELSE IF((0b101011 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000111111111111111
ELSE IF((0b101100 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000011111111111111
ELSE IF((0b101101 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000001111111111111
ELSE IF((0b101110 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000111111111111
ELSE IF((0b101111 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000011111111111
ELSE IF((0b110000 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000001111111111
ELSE IF((0b110001 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000111111111
ELSE IF((0b110010 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000011111111
ELSE IF((0b110011 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000001111111
ELSE IF((0b110100 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000000111111
ELSE IF((0b110101 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000000011111
ELSE IF((0b110110 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000000001111
ELSE IF((0b110111 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000000000111
ELSE IF((0b111000 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000000000011
ELSE IF((0b111001 = let_k_1
))
THEN 0b0000000000000000000000000000000000000000000000000000000001
ELSE 0b0000000000000000000000000000000000000000000000000000000000
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ENDIF
ELSE 0b0000000000000000000000000000000000000000000000000000000000
ENDIF[0:0]
))))  );
ASSERT( (LET let_k_0 = (0x000000 @ (arg016 WITH [0x00000002] := 0x00)
[BVPLUS(64, 
0xFFFFAA20E20C64A8, 
IF((0x00 = arg016[0x00000001]
))
THEN 0x000055DF1DF381B8
ELSE 0x000055DF1DF39B59
ENDIF)
[31:0]]
) IN 
(0x4B = IF(BVGT(0x0000001A,BVPLUS(32, 
0xFFFFFF9F, 
let_k_0)
)
)
THEN BVPLUS(32, 
0xFFFFFFE0, 
let_k_0)

ELSE let_k_0
ENDIF[7:0]
))  );
%----------------------------------------------------
QUERY( FALSE  );
