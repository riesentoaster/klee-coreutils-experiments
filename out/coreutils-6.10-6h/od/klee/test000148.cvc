n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data14  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2115  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3516  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4417  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4718  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5319  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr820  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6121  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data22  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6623  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6925  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr626  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10427  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10628  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11129  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11230  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11331  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11732  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12533  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12934  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13735  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13836  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14437  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14838  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4239  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15040  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15441  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15642  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15843  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16044  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16145  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16746  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17147  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17448  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17549  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17850  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8751  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17952  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18053  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18354  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18955  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13456  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19257  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19758  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x3D = arg005[0x00000003]
) );
ASSERT( (0x66 = arg005[0x00000002]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000006]
))) );
ASSERT( (0x66 = arg005[0x00000004]
) );
ASSERT( (0x4C = arg005[0x00000005]
) );
ASSERT( (0x61 = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0x0000000000000006, 
IF((0x7A = arg005[0x00000006]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
) );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000006]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x61 = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000007, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000006]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x63 = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000007, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000006]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x64 = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000007, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000006]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x66 = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000007, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000006]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x6F = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000007, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000006]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x75 = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000007, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000006]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x78 = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000007, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = arg005[0x00000006] IN 
((0x7A = let_k_0
) OR (0x61 = let_k_0
)
))  );
ASSERT( (0x27 = arg005[0x00000007]
) );
ASSERT( (0x27 = arg005[0x00000008]
) );
ASSERT( (0x27 = arg005[0x00000009]
) );
%----------------------------------------------------
QUERY( FALSE  );
