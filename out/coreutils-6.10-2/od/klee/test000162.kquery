array A_data_stat[144] : w32 -> w8 = symbolic
array B_data_stat[144] : w32 -> w8 = symbolic
array arg00[11] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array const_arr67[4] : w32 -> w8 = [0 0 0 0]
array n_args[4] : w32 -> w8 = symbolic
array stdin[12] : w32 -> w8 = symbolic
array stdin_stat[144] : w32 -> w8 = symbolic
array stdout_stat[144] : w32 -> w8 = symbolic
(query [(Eq 1
             (ReadLSB w32 0 n_args))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A_data_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 A_data_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 B_data_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 B_data_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdin_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdout_stat)
              65536)
         (Eq 45 (Read w8 0 arg00))
         (Eq 45 (Read w8 1 arg00))
         (Eq 61 (Read w8 3 arg00))
         (Eq 119 (Read w8 2 arg00))
         (Eq false
             (Eq 0 N0:(Read w8 4 arg00)))
         (Eq 0 (Read w8 5 arg00))
         (Eq 0
             (And w16 (ReadLSB w16 N1:(Extract w32 0 (Add w64 256
                                                              (Mul w64 2 (ZExt w64 N0)))) const_arr1)
                      8192))
         (Eq false (Eq 45 N0))
         (Eq false (Eq 43 N0))
         (Sle (ZExt w32 N2:(Extract w8 0 (Add w32 4294967248 (SExt w32 N0))))
              9)
         (Eq false (Eq 0 N2))
         (Eq 0
             (URem w64 N3:(ZExt w64 N2) 2))
         (Eq 4 (Shl w64 N3 1))
         (Eq 0
             (Sub w32 (ZExt w32 (Read w8 0 U0:[N4:(Extract w32 0 (Add w64 1 N3))=N5:(Read w8 (Extract w32 0 (Add w64 1
                                                                                                                     N6:(Select w64 (Ult 12 N3) 12 N3)))
                                                                                             stdin),
                                               N7:(Extract w32 0 N3)=(Read w8 (Extract w32 0 N6)
                                                                              stdin),
                                               3=171, 2=171, 1=(Read w8 1 stdin),
                                               0=(Read w8 0 stdin)] @ const_arr67))
                      (ZExt w32 (Read w8 N7 U0))))
         (Eq 0
             (Sub w32 (ZExt w32 (Read w8 1 U0))
                      (ZExt w32 N5)))
         (Eq 0
             (Sub w32 (ZExt w32 (Read w8 N7 U1:[1=N8:(Read w8 (Extract w32 0 (Add w64 1
                                                                                      N9:(Add w64 N6
                                                                                                  (Select w64 (Ult 12 (Add w64 N6 N3))
                                                                                                              (Sub w64 12 N6)
                                                                                                              N3))))
                                                              stdin),
                                                0=N10:(Read w8 (Extract w32 0 N9)
                                                               stdin)] @ U0))
                      (ZExt w32 N10)))
         (Eq 0
             (Sub w32 (ZExt w32 (Read w8 N4 U1))
                      (ZExt w32 N8)))
         (Eq 0
             (Sub w32 (ZExt w32 (Read w8 0 U2:[N4=N11:(Read w8 (Extract w32 0 (Add w64 1
                                                                                       N12:(Add w64 N9
                                                                                                    (Select w64 (Ult 12 (Add w64 N9 N3))
                                                                                                                (Sub w64 12 N9)
                                                                                                                N3))))
                                                               stdin),
                                               N7=(Read w8 (Extract w32 0 N12)
                                                           stdin)] @ U1))
                      (ZExt w32 (Read w8 N7 U2))))
         (Eq 0
             (Sub w32 (ZExt w32 (Read w8 1 U2))
                      (ZExt w32 N11)))]
        false)
