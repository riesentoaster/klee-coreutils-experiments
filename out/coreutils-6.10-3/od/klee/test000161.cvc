n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr614  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data15  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4917  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5318  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3619  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5920  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6421  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8522  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8923  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data24  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9325  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10026  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10427  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10728  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11129  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12430  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12631  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13232  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13633  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4034  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14035  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14236  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4337  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16238  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16439  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16540  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16741  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16842  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16943  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17344  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17845  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18046  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18747  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18948  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19049  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19150  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19251  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19352  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x00 = arg005[0x00000003]
) );
ASSERT( (0x66 = arg005[0x00000002]
) );
ASSERT( ( NOT( (0x00 = arg017[0x00000000]
))) );
ASSERT( (LET let_k_0 = arg017[0x00000000] IN 
((0x78 = let_k_0
) OR ((0x75 = let_k_0
) OR ((0x6F = let_k_0
) OR (0x64 = let_k_0
)
)
)
))  );
ASSERT( ( NOT( (0x43 = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x49 = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x4C = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x53 = arg017[0x00000001]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000002],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000003],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000004],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000005],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000006],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000007],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000008],32)
)
)
 );
ASSERT( (LET let_k_0 = BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
,64)
,
let_k_1 = BVPLUS(64, 
BVPLUS(64, 
(let_k_0[60:0] @ 0b000
), 
(let_k_0[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000002],32)
)
,64)
)
,
let_k_2 = BVPLUS(64, 
BVPLUS(64, 
(let_k_1[60:0] @ 0b000
), 
(let_k_1[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000003],32)
)
,64)
)
,
let_k_3 = BVPLUS(64, 
BVPLUS(64, 
(let_k_2[60:0] @ 0b000
), 
(let_k_2[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000004],32)
)
,64)
)
,
let_k_4 = BVPLUS(64, 
BVPLUS(64, 
(let_k_3[60:0] @ 0b000
), 
(let_k_3[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000005],32)
)
,64)
)
,
let_k_5 = BVPLUS(64, 
BVPLUS(64, 
(let_k_4[60:0] @ 0b000
), 
(let_k_4[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000006],32)
)
,64)
)
,
let_k_6 = BVPLUS(64, 
BVPLUS(64, 
(let_k_5[60:0] @ 0b000
), 
(let_k_5[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000007],32)
)
,64)
)
 IN 
( NOT( BVGT(BVPLUS(64, 
BVPLUS(64, 
(let_k_6[60:0] @ 0b000
), 
(let_k_6[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000008],32)
)
,64)
)
,0x0000000000000008)
)))  );
ASSERT( (LET let_k_0 = BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
,64)
,
let_k_1 = BVPLUS(64, 
BVPLUS(64, 
(let_k_0[60:0] @ 0b000
), 
(let_k_0[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000002],32)
)
,64)
)
,
let_k_2 = BVPLUS(64, 
BVPLUS(64, 
(let_k_1[60:0] @ 0b000
), 
(let_k_1[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000003],32)
)
,64)
)
,
let_k_3 = BVPLUS(64, 
BVPLUS(64, 
(let_k_2[60:0] @ 0b000
), 
(let_k_2[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000004],32)
)
,64)
)
,
let_k_4 = BVPLUS(64, 
BVPLUS(64, 
(let_k_3[60:0] @ 0b000
), 
(let_k_3[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000005],32)
)
,64)
)
,
let_k_5 = BVPLUS(64, 
BVPLUS(64, 
(let_k_4[60:0] @ 0b000
), 
(let_k_4[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000006],32)
)
,64)
)
,
let_k_6 = BVPLUS(64, 
BVPLUS(64, 
(let_k_5[60:0] @ 0b000
), 
(let_k_5[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000007],32)
)
,64)
)
,
let_k_7 = ((((((((((((((((((((((((((((((((((((const_arr19251 WITH [0x00000000] := 0x00)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x01)
 WITH [0x00000005] := 0x00)
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0x00)
 WITH [0x00000008] := 0x02)
 WITH [0x00000009] := 0x00)
 WITH [0x0000000A] := 0x00)
 WITH [0x0000000B] := 0x00)
 WITH [0x0000000C] := 0x00)
 WITH [0x0000000D] := 0x00)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x03)
 WITH [0x00000011] := 0x00)
 WITH [0x00000012] := 0x00)
 WITH [0x00000013] := 0x00)
 WITH [0x00000014] := 0x00)
 WITH [0x00000015] := 0x00)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x00)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0x00)
 WITH [0x0000001D] := 0x00)
 WITH [0x0000001E] := 0x00)
 WITH [0x0000001F] := 0x00)
 WITH [0x00000020] := 0x05)
 WITH [0x00000021] := 0x00)
 WITH [0x00000022] := 0x00)
 WITH [0x00000023] := 0x00)
,
let_k_8 = (BVPLUS(64, 
BVPLUS(64, 
(let_k_6[60:0] @ 0b000
), 
(let_k_6[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000008],32)
)
,64)
)
[61:0] @ 0b00
)[31:0] IN 
((((0x00 = let_k_7[let_k_8]
) AND (0x00 = let_k_7[BVPLUS(32, 
0x00000001, 
let_k_8)
]
)
) AND (0x00 = let_k_7[BVPLUS(32, 
0x00000002, 
let_k_8)
]
)
) AND (0x00 = let_k_7[BVPLUS(32, 
0x00000003, 
let_k_8)
]
)
))  );
ASSERT( (LET let_k_0 = arg017[0x00000000] IN 
((0x64 = let_k_0
) OR ((0x6F = let_k_0
) OR ((0x78 = let_k_0
) OR (0x75 = let_k_0
)
)
)
))  );
ASSERT( (LET let_k_0 = arg017[0x00000008] IN 
((0x37 = let_k_0
) OR ((0x36 = let_k_0
) OR ((0x35 = let_k_0
) OR ((0x33 = let_k_0
) OR (0x30 = let_k_0
)
)
)
)
))  );
ASSERT( (0x00 = arg017[0x00000009]
) );
%----------------------------------------------------
QUERY( FALSE  );
