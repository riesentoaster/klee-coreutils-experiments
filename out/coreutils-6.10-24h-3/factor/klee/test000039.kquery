array A_data_stat[144] : w32 -> w8 = symbolic
array arg00[11] : w32 -> w8 = symbolic
array arg01[3] : w32 -> w8 = symbolic
array arg02[3] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array n_args[4] : w32 -> w8 = symbolic
array n_args_1[4] : w32 -> w8 = symbolic
array stdin_stat[144] : w32 -> w8 = symbolic
array stdout_stat[144] : w32 -> w8 = symbolic
(query [(Ult N0:(ReadLSB w32 0 n_args)
              2)
         (Slt 0 N0)
         (Ult N1:(ReadLSB w32 0 n_args_1)
              3)
         (Slt 0 N1)
         (Eq false
             (Eq (Add w32 1 N0) (Add w32 N1 N0)))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A_data_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 A_data_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdin_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdout_stat)
              65536)
         (Eq false
             (Eq 45 N2:(Read w8 0 arg00)))
         (Eq false
             (Eq 45 (Read w8 0 arg01)))
         (Eq 45 (Read w8 0 arg02))
         (Eq 45 (Read w8 1 arg02))
         (Eq false
             (Eq 0
                 (And w16 (ReadLSB w16 N3:(Extract w32 0 (Add w64 256
                                                                  (Mul w64 2 (ZExt w64 N2)))) const_arr1)
                          8192)))
         (Eq 0
             (And w16 (ReadLSB w16 N4:(Extract w32 0 (Add w64 256
                                                              (Mul w64 2
                                                                       (ZExt w64 N5:(Read w8 1 arg00))))) const_arr1)
                      8192))
         (Eq false (Eq 45 N5))
         (Eq false (Eq 43 N5))
         (Sle (ZExt w32 N6:(Extract w8 0 (Add w32 4294967248 (SExt w32 N5))))
              9)
         (Sle (ZExt w32 N7:(Extract w8 0 (Add w32 4294967248
                                                  (SExt w32 (Read w8 2 arg00)))))
              9)
         (Eq false
             (Sle (ZExt w32 (Extract w8 0 (Add w32 4294967248
                                                   N8:(SExt w32 (Read w8 3 arg00)))))
                  9))
         (Sle 65 N8)
         (Eq false
             (Sle 10
                  (ZExt w32 N9:(Extract w8 0 (Add w32 4294967209 (Or w32 N8 32))))))
         (Sle (ZExt w32 N10:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 4 arg00)))))
              9)
         (Sle (ZExt w32 N11:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 5 arg00)))))
              9)
         (Sle (ZExt w32 N12:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 6 arg00)))))
              9)
         (Sle (ZExt w32 N13:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 7 arg00)))))
              9)
         (Sle (ZExt w32 N14:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 8 arg00)))))
              9)
         (Eq false
             (Sle (ZExt w32 (Extract w8 0 (Add w32 4294967248
                                                   N15:(SExt w32 (Read w8 9 arg00)))))
                  9))
         (Sle 65 N15)
         (Eq false
             (Sle 10
                  (ZExt w32 N16:(Extract w8 0 (Add w32 4294967209 (Or w32 N15 32))))))
         (Eq N17:(Add w64 (Mul w64 10
                                   (Add w64 (Mul w64 10
                                                     (Add w64 (Mul w64 10
                                                                       (Add w64 (Mul w64 10
                                                                                         (Add w64 (Mul w64 10
                                                                                                           (Add w64 (Mul w64 10
                                                                                                                             (Add w64 (Mul w64 10
                                                                                                                                               (Add w64 (Mul w64 10 (ZExt w64 N6))
                                                                                                                                                        (ZExt w64 N7)))
                                                                                                                                      (ZExt w64 N9)))
                                                                                                                    (ZExt w64 N10)))
                                                                                                  (ZExt w64 N11)))
                                                                                (ZExt w64 N12)))
                                                              (ZExt w64 N13)))
                                            (ZExt w64 N14)))
                          (ZExt w64 N16))
             (Mul w64 3 N18:(UDiv w64 N17 3)))
         (Eq N18
             (Mul w64 3 N19:(UDiv w64 N18 3)))
         (Eq N19
             (Mul w64 3 N20:(UDiv w64 N19 3)))
         (Eq N20
             (Mul w64 3 N21:(UDiv w64 N20 3)))
         (Eq N21
             (Mul w64 3 N22:(UDiv w64 N21 3)))
         (Eq N22
             (Mul w64 3 N23:(UDiv w64 N22 3)))
         (Eq N23
             (Mul w64 3 N24:(UDiv w64 N23 3)))
         (Eq N24
             (Mul w64 3 N25:(UDiv w64 N24 3)))
         (Eq N25
             (Mul w64 3 N26:(UDiv w64 N25 3)))
         (Eq N26
             (Mul w64 3 N27:(UDiv w64 N26 3)))
         (Eq N27
             (Mul w64 3 N28:(UDiv w64 N27 3)))
         (Eq N28
             (Mul w64 3 N29:(UDiv w64 N28 3)))
         (Eq N29
             (Mul w64 3 N30:(UDiv w64 N29 3)))
         (Eq N30
             (Mul w64 3 (UDiv w64 N30 3)))]
        false)
