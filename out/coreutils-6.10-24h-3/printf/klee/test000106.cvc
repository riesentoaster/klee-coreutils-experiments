n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr310  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr411  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr714  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr815  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr916  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1219  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1320  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1421  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1522  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1623  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1825  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1926  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2128  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2229  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2330  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2431  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2532  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2633  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2734  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2835  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2936  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3037  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3138  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3239  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3340  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3441  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3542  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3643  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3744  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3845  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3946  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4047  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4148  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4249  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4350  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4451  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4552  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4653  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4754  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4855  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4956  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5057  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5158  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5259  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5360  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5461  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5662  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5763  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5864  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5965  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6066  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6167  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6268  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6369  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6470  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6571  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6672  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6873  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7074  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7275  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7376  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7477  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7578  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7679  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7780  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7881  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7982  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8083  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8184  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8285  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8386  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8487  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8588  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8689  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8790  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8891  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8992  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9093  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9194  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9295  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9396  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9497  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9598  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9699  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr97100  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr98101  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr99102  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr100103  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr101104  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr102105  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr103106  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr104107  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr105108  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr106109  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr107110  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x25 = arg005[0x00000000]
) );
ASSERT( ( NOT( (0x25 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x62 = arg005[0x00000001]
))) );
ASSERT( (LET let_k_0 = arg005[0x00000001] IN 
((0x27 = let_k_0
) OR (0x49 = let_k_0
)
))  );
ASSERT( ( NOT( (0x49 = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x20 = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x23 = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x27 = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x2B = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x30 = arg005[0x00000002]
))) );
ASSERT( ( NOT( (0x2A = arg005[0x00000002]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000002],32)
)
)
 );
ASSERT( (0x2E = arg005[0x00000003]
) );
ASSERT( (0x2A = arg005[0x00000004]
) );
ASSERT( (LET let_k_0 = arg005[0x00000005] IN 
((0x4C = let_k_0
) OR ((0x6C = let_k_0
) OR ((0x6A = let_k_0
) OR ((0x68 = let_k_0
) OR ((0x74 = let_k_0
) OR (0x7A = let_k_0
)
)
)
)
)
))  );
ASSERT( (LET let_k_0 = arg005[0x00000006] IN 
((0x4C = let_k_0
) OR ((0x6C = let_k_0
) OR ((0x6A = let_k_0
) OR ((0x68 = let_k_0
) OR ((0x74 = let_k_0
) OR (0x7A = let_k_0
)
)
)
)
)
))  );
ASSERT( (LET let_k_0 = arg005[0x00000007] IN 
((0x4C = let_k_0
) OR ((0x6C = let_k_0
) OR ((0x6A = let_k_0
) OR ((0x68 = let_k_0
) OR ((0x74 = let_k_0
) OR (0x7A = let_k_0
)
)
)
)
)
))  );
ASSERT( (LET let_k_0 = arg005[0x00000008] IN 
((0x4C = let_k_0
) OR ((0x6C = let_k_0
) OR ((0x6A = let_k_0
) OR ((0x68 = let_k_0
) OR ((0x74 = let_k_0
) OR (0x7A = let_k_0
)
)
)
)
)
))  );
ASSERT( (LET let_k_0 = arg005[0x00000009] IN 
((0x4C = let_k_0
) OR ((0x6C = let_k_0
) OR ((0x6A = let_k_0
) OR ((0x68 = let_k_0
) OR ((0x74 = let_k_0
) OR (0x7A = let_k_0
)
)
)
)
)
))  );
%----------------------------------------------------
QUERY( FALSE  );
