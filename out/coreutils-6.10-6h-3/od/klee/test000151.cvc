n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2814  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2915  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data17  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5418  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5719  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6020  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6221  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr822  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4723  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7224  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr625  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9126  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10127  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data28  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1829  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11930  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12931  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13032  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13233  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13934  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14235  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7736  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15237  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15938  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16039  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16240  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16941  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17242  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17643  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17944  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18445  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19046  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19747  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19848  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr20649  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr20850  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr20951  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr21052  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr21853  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr22054  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr22155  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr22356  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr22857  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr23358  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr23859  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr24560  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr24661  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr25162  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr25263  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr25364  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6465  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr26666  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr26867  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr27268  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr27569  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr27670  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr27771  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr27872  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr27973  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr28074  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr28175  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr28576  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr28677  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr28778  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr28879  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29280  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29381  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29582  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29983  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr30084  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr30285  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr30686  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr31087  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr31288  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x00 = arg005[0x00000003]
) );
ASSERT( (0x66 = arg005[0x00000002]
) );
ASSERT( ( NOT( (0x00 = arg017[0x00000000]
))) );
ASSERT( (LET let_k_0 = arg017[0x00000000] IN 
((0x78 = let_k_0
) OR ((0x75 = let_k_0
) OR ((0x6F = let_k_0
) OR (0x64 = let_k_0
)
)
)
))  );
ASSERT( ( NOT( (0x43 = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x49 = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x4C = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x53 = arg017[0x00000001]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
)
 );
ASSERT( ( NOT( BVGT(BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
,64)
,0x0000000000000008)
)) );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((((((((((((((const_arr25263 WITH [0x00000000] := 0x00)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x01)
 WITH [0x00000005] := 0x00)
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0x00)
 WITH [0x00000008] := 0x02)
 WITH [0x00000009] := 0x00)
 WITH [0x0000000A] := 0x00)
 WITH [0x0000000B] := 0x00)
 WITH [0x0000000C] := 0x00)
 WITH [0x0000000D] := 0x00)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x03)
 WITH [0x00000011] := 0x00)
 WITH [0x00000012] := 0x00)
 WITH [0x00000013] := 0x00)
 WITH [0x00000014] := 0x00)
 WITH [0x00000015] := 0x00)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x00)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0x00)
 WITH [0x0000001D] := 0x00)
 WITH [0x0000001E] := 0x00)
 WITH [0x0000001F] := 0x00)
 WITH [0x00000020] := 0x05)
 WITH [0x00000021] := 0x00)
 WITH [0x00000022] := 0x00)
 WITH [0x00000023] := 0x00)
,
let_k_1 = (BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
,64)
[61:0] @ 0b00
)[31:0] IN 
((((0x00 = let_k_0[let_k_1]
) AND (0x00 = let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
]
)
) AND (0x00 = let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
]
)
) AND (0x00 = let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
]
)
))  );
ASSERT( (LET let_k_0 = arg017[0x00000000] IN 
((0x64 = let_k_0
) OR ((0x6F = let_k_0
) OR ((0x78 = let_k_0
) OR (0x75 = let_k_0
)
)
)
))  );
ASSERT( (LET let_k_0 = arg017[0x00000001] IN 
((0x37 = let_k_0
) OR ((0x36 = let_k_0
) OR ((0x35 = let_k_0
) OR ((0x33 = let_k_0
) OR (0x30 = let_k_0
)
)
)
)
))  );
ASSERT( (0x00 = arg017[0x00000002]
) );
ASSERT( (0x30 = BVPLUS(32, 
0x00000030, 
BVMOD(32, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
,64)
[31:0], 
0x0000000A)
)
[7:0]
) );
%----------------------------------------------------
QUERY( FALSE  );
