n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr511  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr612  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr814  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1115  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1216  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1317  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1618  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1719  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1820  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1921  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2022  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2123  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2224  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2325  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2426  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2527  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2628  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2929  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3030  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3131  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3232  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3333  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3434  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3535  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3636  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3737  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3838  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3939  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4040  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4541  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4642  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4743  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5044  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5145  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5246  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5347  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5448  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5749  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5850  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5951  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6052  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6153  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6454  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6555  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6656  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6757  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6858  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6959  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7060  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7161  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7262  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7563  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8064  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8165  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8266  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8567  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8668  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8769  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9270  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9371  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9472  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9573  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9674  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9775  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9876  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9977  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10078  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10179  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10280  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10381  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10682  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10783  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10884  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10985  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11086  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11187  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11888  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11989  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12090  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12391  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12492  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12993  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13094  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13195  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13496  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13597  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13698  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13799  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr138100  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr139101  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x3D = arg005[0x00000003]
) );
ASSERT( (0x62 = arg005[0x00000002]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000004]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000007]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000008]
))) );
ASSERT( ( NOT( (0x2C = arg005[0x00000004]
))) );
ASSERT( (0x2C = arg005[0x00000005]
) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000004],32)
)
)
 );
ASSERT( ( NOT( (0x2B = arg005[0x00000004]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000004]
))) );
ASSERT( (LET let_k_0 = (0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000004],32)
)
[7:0]
)[31:0] IN 
(0x00000001 = (let_k_0 & IF(SBVGT(0x000000FF,let_k_0)
)
THEN 0x0000007F
ELSE 0x000000FF
ENDIF
)
))  );
ASSERT( (0x2C = arg005[0x00000006]
) );
ASSERT( ( NOT( (0x2C = arg005[0x00000007]
))) );
ASSERT( ( NOT( (0x2C = arg005[0x00000008]
))) );
ASSERT( (0x2C = arg005[0x00000009]
) );
ASSERT( ( NOT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000007],32)
)
)
)) );
ASSERT( (0x61 = BVSX(arg005[0x00000007],32)
[7:0]
) );
ASSERT( (0x61 = BVSX(arg005[0x00000008],32)
[7:0]
) );
%----------------------------------------------------
QUERY( FALSE  );
