n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr814  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1015  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1216  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2318  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2719  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3020  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3121  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3422  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3523  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3825  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4126  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4427  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4728  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4829  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5130  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5331  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5432  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5733  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6034  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6235  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6436  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6537  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6638  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6739  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6840  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7041  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7142  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7243  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7344  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7545  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7646  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8147  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8248  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8449  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8550  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9451  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9552  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9653  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9754  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9855  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9956  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10057  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10158  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10259  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10560  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10661  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10862  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10963  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11264  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11365  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11466  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11567  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11668  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11869  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11970  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12071  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12172  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12273  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12374  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12475  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12576  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12777  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12878  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12979  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13080  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13181  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg008[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg008[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg008[0x00000001]
))) );
ASSERT( (0x64 = BVSX(arg008[0x00000001],32)
[7:0]
) );
ASSERT( (0x00 = arg016[0x00000001]
) );
ASSERT( (0x41 = arg016[0x00000000]
) );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((const_arr412 WITH [0x00000000] := 0x08)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [0x00000006] := 0xAB)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xF8)
 WITH [0x00000009] := 0x32)
 WITH [0x0000000A] := 0xE2)
 WITH [0x0000000B] := 0xC7)
 WITH [0x0000000C] := 0x25)
 WITH [0x0000000D] := 0x56)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x60)
 WITH [0x00000011] := 0x03)
 WITH [0x00000012] := 0xE6)
 WITH [0x00000013] := 0xC4)
 WITH [0x00000014] := 0x25)
 WITH [0x00000015] := 0x56)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
,
let_k_1 = BVPLUS(64, 
0xFFFFA9DA38165870, 
IF(((((((((0x00 = A_data_stat2[0x00000008]
) AND (0x00 = A_data_stat2[0x00000009]
)
) AND (0x00 = A_data_stat2[0x0000000A]
)
) AND (0x00 = A_data_stat2[0x0000000B]
)
) AND (0x00 = A_data_stat2[0x0000000C]
)
) AND (0x00 = A_data_stat2[0x0000000D]
)
) AND (0x00 = A_data_stat2[0x0000000E]
)
) AND (0x00 = A_data_stat2[0x0000000F]
)
))
THEN 0x0000000000000000
ELSE 0x00005625C7E9A7A0
ENDIF)
[31:0],
let_k_2 = BVPLUS(64, 
0xFFFFA9DA3B19FCB8, 
(let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
))
[31:0],
let_k_3 = ((((((((((((((((A_data_stat2 WITH [0x00000030] := 0x08)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000040] := 0x08)
 WITH [0x00000041] := 0x00)
 WITH [0x00000042] := 0x00)
 WITH [0x00000043] := 0x00)
 WITH [0x00000044] := 0x00)
 WITH [0x00000045] := 0x00)
 WITH [0x00000046] := 0x00)
 WITH [0x00000047] := 0x00)
,
let_k_4 = BVPLUS(32, 
0x00000001, 
let_k_2)
,
let_k_5 = BVPLUS(32, 
0x00000002, 
let_k_2)
,
let_k_6 = let_k_3[let_k_5],
let_k_7 = BVPLUS(32, 
0x00000003, 
let_k_2)
,
let_k_8 = let_k_3[let_k_7],
let_k_9 = (let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
) IN 
(0x4 = ((((let_k_3 WITH [let_k_2] := 0x00)
 WITH [let_k_4] := ((let_k_8 @ (let_k_6 @ (let_k_3[let_k_4] @ let_k_3[let_k_2]
)
)
)[31:9] @ 0b000000000
)[15:8])
 WITH [let_k_5] := let_k_6)
 WITH [let_k_7] := let_k_8)
[BVPLUS(64, 
0xFFFFA9DA3B19FCB9, 
let_k_9)
[31:0]][7:4]
))  );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((const_arr412 WITH [0x00000000] := 0x08)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [0x00000006] := 0xAB)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xF8)
 WITH [0x00000009] := 0x32)
 WITH [0x0000000A] := 0xE2)
 WITH [0x0000000B] := 0xC7)
 WITH [0x0000000C] := 0x25)
 WITH [0x0000000D] := 0x56)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x60)
 WITH [0x00000011] := 0x03)
 WITH [0x00000012] := 0xE6)
 WITH [0x00000013] := 0xC4)
 WITH [0x00000014] := 0x25)
 WITH [0x00000015] := 0x56)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
,
let_k_1 = BVPLUS(64, 
0xFFFFA9DA38165870, 
IF(((((((((0x00 = A_data_stat2[0x00000008]
) AND (0x00 = A_data_stat2[0x00000009]
)
) AND (0x00 = A_data_stat2[0x0000000A]
)
) AND (0x00 = A_data_stat2[0x0000000B]
)
) AND (0x00 = A_data_stat2[0x0000000C]
)
) AND (0x00 = A_data_stat2[0x0000000D]
)
) AND (0x00 = A_data_stat2[0x0000000E]
)
) AND (0x00 = A_data_stat2[0x0000000F]
)
))
THEN 0x0000000000000000
ELSE 0x00005625C7E9A7A0
ENDIF)
[31:0],
let_k_2 = BVPLUS(64, 
0xFFFFA9DA3B19FCB8, 
(let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
))
[31:0],
let_k_3 = ((((((((((((((((A_data_stat2 WITH [0x00000030] := 0x08)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000040] := 0x08)
 WITH [0x00000041] := 0x00)
 WITH [0x00000042] := 0x00)
 WITH [0x00000043] := 0x00)
 WITH [0x00000044] := 0x00)
 WITH [0x00000045] := 0x00)
 WITH [0x00000046] := 0x00)
 WITH [0x00000047] := 0x00)
,
let_k_4 = BVPLUS(32, 
0x00000001, 
let_k_2)
,
let_k_5 = BVPLUS(32, 
0x00000002, 
let_k_2)
,
let_k_6 = let_k_3[let_k_5],
let_k_7 = BVPLUS(32, 
0x00000003, 
let_k_2)
,
let_k_8 = let_k_3[let_k_7],
let_k_9 = (let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
),
let_k_10 = ((((let_k_3 WITH [let_k_2] := 0x00)
 WITH [let_k_4] := ((let_k_8 @ (let_k_6 @ (let_k_3[let_k_4] @ let_k_3[let_k_2]
)
)
)[31:9] @ 0b000000000
)[15:8])
 WITH [let_k_5] := let_k_6)
 WITH [let_k_7] := let_k_8)
,
let_k_11 = BVPLUS(64, 
0xFFFFA9DA3B19FCBC, 
let_k_9)
[31:0] IN 
((((0xE8 = let_k_10[let_k_11]
) AND (0x03 = let_k_10[BVPLUS(32, 
0x00000001, 
let_k_11)
]
)
) AND (0x00 = let_k_10[BVPLUS(32, 
0x00000002, 
let_k_11)
]
)
) AND (0x00 = let_k_10[BVPLUS(32, 
0x00000003, 
let_k_11)
]
)
))  );
%----------------------------------------------------
QUERY( FALSE  );
