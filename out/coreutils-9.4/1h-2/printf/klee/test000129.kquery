array A_data_stat[144] : w32 -> w8 = symbolic
array B_data_stat[144] : w32 -> w8 = symbolic
array arg00[11] : w32 -> w8 = symbolic
array arg01[11] : w32 -> w8 = symbolic
array arg02[11] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array n_args[4] : w32 -> w8 = symbolic
array stdin_stat[144] : w32 -> w8 = symbolic
array stdout_stat[144] : w32 -> w8 = symbolic
(query [(Ult N0:(ReadLSB w32 0 n_args)
              4)
         (Slt 0 N0)
         (Eq false (Eq 1 N0))
         (Eq false (Eq 2 N0))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A_data_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 A_data_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 B_data_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 B_data_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdin_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdout_stat)
              65536)
         (Eq 37 (Read w8 0 arg00))
         (Eq false
             (Eq 37 N1:(Read w8 1 arg00)))
         (Eq false (Eq 113 N1))
         (Eq false (Eq 98 N1))
         (Or (Eq 39 N1) (Eq 73 N1))
         (Or (Eq 39 N2:(Read w8 2 arg00))
             (Eq 73 N2))
         (Or (Eq 39 N3:(Read w8 3 arg00))
             (Eq 73 N3))
         (Eq 35 (Read w8 4 arg00))
         (Or (Eq 39 N4:(Read w8 5 arg00))
             (Eq 73 N4))
         (Eq 42 (Read w8 6 arg00))
         (Eq false
             (Eq 34 N5:(Read w8 0 arg01)))
         (Eq false (Eq 39 N5))
         (Eq false
             (Eq 0
                 (And w32 (ZExt w32 (ReadLSB w16 N6:(Extract w32 0 (Add w64 256
                                                                            (Mul w64 2
                                                                                     (SExt w64 (SExt w32 N5))))) const_arr1))
                          8192)))
         (Eq 43 (Read w8 1 arg01))
         (Eq 48 (Read w8 2 arg01))
         (Eq 120
             (Or w32 (SExt w32 (Read w8 3 arg01))
                     32))
         (Sle (ZExt w32 (Extract w8 0 (Add w32 4294967248
                                               (SExt w32 (Read w8 4 arg01)))))
              9)
         (Eq 0 (Read w8 5 arg01))
         (Eq 46 (Read w8 7 arg00))
         (Eq 42 (Read w8 8 arg00))
         (Eq 48 (Read w8 0 arg02))
         (Eq 120
             (Or w32 (SExt w32 N7:(Read w8 1 arg02))
                     32))
         (Sle (ZExt w32 N8:(Extract w8 0 (Add w32 4294967248
                                                  (SExt w32 N9:(Read w8 2 arg02)))))
              9)
         (Sle (ZExt w32 N10:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 3 arg02)))))
              9)
         (Sle (ZExt w32 N11:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 4 arg02)))))
              9)
         (Sle (ZExt w32 N12:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 5 arg02)))))
              9)
         (Sle (ZExt w32 N13:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 6 arg02)))))
              9)
         (Sle (ZExt w32 N14:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 7 arg02)))))
              9)
         (Sle (ZExt w32 N15:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 8 arg02)))))
              9)
         (Sle (ZExt w32 N16:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 9 arg02)))))
              9)
         (Slt 2147483647
              (Add w64 (Mul w64 16
                                (Add w64 (Mul w64 16
                                                  (Add w64 (Mul w64 16
                                                                    (Add w64 (Mul w64 16
                                                                                      (Add w64 (Mul w64 16
                                                                                                        (Add w64 (Mul w64 16
                                                                                                                          (Add w64 (Mul w64 16 (ZExt w64 N8))
                                                                                                                                   (ZExt w64 N10)))
                                                                                                                 (ZExt w64 N11)))
                                                                                               (ZExt w64 N12)))
                                                                             (ZExt w64 N13)))
                                                           (ZExt w64 N14)))
                                         (ZExt w64 N15)))
                       (ZExt w64 N16)))
         (Or (Eq 88 N7) (Eq 120 N7))
         (Or (Eq 57 N9) (Eq 56 N9))]
        false)
