n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg003  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg004  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg015  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg026  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg037  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr310  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000004,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( ((((0x02 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat2[0x0000000B] @ (stdout_stat2[0x0000000A] @ (stdout_stat2[0x00000009] @ stdout_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat2[0x0000003F] @ (stdout_stat2[0x0000003E] @ (stdout_stat2[0x0000003D] @ (stdout_stat2[0x0000003C] @ (stdout_stat2[0x0000003B] @ (stdout_stat2[0x0000003A] @ (stdout_stat2[0x00000039] @ stdout_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg004[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg004[0x00000002]
))) );
ASSERT( ( NOT( (0x00 = arg004[0x00000003]
))) );
ASSERT( ( NOT( (0x00 = arg004[0x00000004]
))) );
ASSERT( ( NOT( (0x00 = arg004[0x00000005]
))) );
ASSERT( ( NOT( (0x00 = arg004[0x00000006]
))) );
ASSERT( ( NOT( (0x00 = arg004[0x00000007]
))) );
ASSERT( ( NOT( (0x00 = arg004[0x00000008]
))) );
ASSERT( ( NOT( (0x00 = arg004[0x00000009]
))) );
ASSERT( (0x3A = arg015[0x00000000]
) );
ASSERT( (0x00 = arg015[0x00000001]
) );
ASSERT( (0x2B = arg026[0x00000000]
) );
ASSERT( (0x00 = arg026[0x00000001]
) );
ASSERT( (0x2E = arg037[0x00000000]
) );
ASSERT( (0x7B = arg037[0x00000001]
) );
ASSERT( (0x7B = arg004[0x00000001]
) );
%----------------------------------------------------
QUERY( FALSE  );
