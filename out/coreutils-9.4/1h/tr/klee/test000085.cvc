n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin8  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg009  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3510  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5711  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr36412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr49413  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr52914  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr73615  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr74616  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr74717  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr74818  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr77719  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr88120  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr88221  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr93322  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr93423  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr103724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr164125  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr175826  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr183127  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr200628  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr224229  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr238430  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr284331  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr298932  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr335633  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr338734  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr352035  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr366836  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0x00 = arg005[0x00000006]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000007]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000008]
))) );
ASSERT( (0x5C = arg005[0x00000000]
) );
ASSERT( (0x61 = arg005[0x00000001]
) );
ASSERT( (0x5C = arg005[0x00000003]
) );
ASSERT( (0x61 = arg005[0x00000004]
) );
ASSERT( (0x5C = arg005[0x00000005]
) );
ASSERT( (LET let_k_0 = arg005[0x00000006] IN 
((0x37 = let_k_0
) OR ((0x36 = let_k_0
) OR ((0x35 = let_k_0
) OR ((0x34 = let_k_0
) OR ((0x33 = let_k_0
) OR ((0x32 = let_k_0
) OR ((0x31 = let_k_0
) OR (0x30 = let_k_0
)
)
)
)
)
)
)
))  );
ASSERT( (0b00110 = arg005[0x00000007][7:3]
) );
ASSERT( (0b00110 = arg005[0x00000008][7:3]
) );
ASSERT( SBVGT(0x00000100,BVPLUS(32, 
0xFFFFFFD0, 
BVPLUS(32, 
BVSX(arg005[0x00000008],32)
, 
((0x000000 @ BVPLUS(8, 
0xD0, 
BVPLUS(8, 
arg005[0x00000007], 
(BVPLUS(8, 
0xD0, 
arg005[0x00000006])
[4:0] @ 0b000
))
)

)[28:0] @ 0b000
))
)
)
 );
ASSERT( (0x5C = arg005[0x00000009]
) );
ASSERT( (0x2D = arg005[0x00000002]
) );
ASSERT( (0x5C = arg016[0x00000000]
) );
ASSERT( (0x61 = arg016[0x00000001]
) );
%----------------------------------------------------
QUERY( FALSE  );
