n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1314  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1715  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2218  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2319  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2420  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2821  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2922  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3023  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3124  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3325  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3826  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4227  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4428  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4629  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4730  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5031  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5132  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5233  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5634  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5835  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5936  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6137  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6238  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6339  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6440  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6641  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6742  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7043  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7144  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7445  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7746  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7947  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8048  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8149  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data50  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8451  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8552  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9053  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9154  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9455  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9556  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9657  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9758  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9959  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10060  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10261  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10362  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10663  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10764  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10865  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10966  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11067  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11168  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11269  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11370  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11471  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11572  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12073  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12174  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12275  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12376  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12477  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12678  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12779  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13080  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13181  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13382  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13483  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13684  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2E = arg016[0x00000000]
) );
ASSERT( (0x00 = arg016[0x00000001]
) );
ASSERT( (0x00 = arg005[0x00000001]
) );
ASSERT( (0x41 = arg005[0x00000000]
) );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((const_arr19 WITH [0x00000000] := 0x08)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [0x00000006] := 0xAB)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0x58)
 WITH [0x00000009] := 0x80)
 WITH [0x0000000A] := 0x6C)
 WITH [0x0000000B] := 0x32)
 WITH [0x0000000C] := 0x9F)
 WITH [0x0000000D] := 0x55)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0xE0)
 WITH [0x00000011] := 0x90)
 WITH [0x00000012] := 0x28)
 WITH [0x00000013] := 0x2F)
 WITH [0x00000014] := 0x9F)
 WITH [0x00000015] := 0x55)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
,
let_k_1 = BVPLUS(64, 
0xFFFFAA60CD97E0F0, 
IF(((((((((0x00 = A_data_stat2[0x00000008]
) AND (0x00 = A_data_stat2[0x00000009]
)
) AND (0x00 = A_data_stat2[0x0000000A]
)
) AND (0x00 = A_data_stat2[0x0000000B]
)
) AND (0x00 = A_data_stat2[0x0000000C]
)
) AND (0x00 = A_data_stat2[0x0000000D]
)
) AND (0x00 = A_data_stat2[0x0000000E]
)
) AND (0x00 = A_data_stat2[0x0000000F]
)
))
THEN 0x0000000000000000
ELSE 0x0000559F32681F20
ENDIF)
[31:0] IN 
(0x8 = ((((((((((((((((A_data_stat2 WITH [0x00000030] := 0x08)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000040] := 0x08)
 WITH [0x00000041] := 0x00)
 WITH [0x00000042] := 0x00)
 WITH [0x00000043] := 0x00)
 WITH [0x00000044] := 0x00)
 WITH [0x00000045] := 0x00)
 WITH [0x00000046] := 0x00)
 WITH [0x00000047] := 0x00)
[BVPLUS(64, 
0xFFFFAA60D0D76F39, 
(let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
))
[31:0]][7:4]
))  );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((const_arr19 WITH [0x00000000] := 0x08)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [0x00000006] := 0xAB)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0x58)
 WITH [0x00000009] := 0x80)
 WITH [0x0000000A] := 0x6C)
 WITH [0x0000000B] := 0x32)
 WITH [0x0000000C] := 0x9F)
 WITH [0x0000000D] := 0x55)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0xE0)
 WITH [0x00000011] := 0x90)
 WITH [0x00000012] := 0x28)
 WITH [0x00000013] := 0x2F)
 WITH [0x00000014] := 0x9F)
 WITH [0x00000015] := 0x55)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
,
let_k_1 = BVPLUS(64, 
0xFFFFAA60CD97E0F0, 
IF(((((((((0x00 = A_data_stat2[0x00000008]
) AND (0x00 = A_data_stat2[0x00000009]
)
) AND (0x00 = A_data_stat2[0x0000000A]
)
) AND (0x00 = A_data_stat2[0x0000000B]
)
) AND (0x00 = A_data_stat2[0x0000000C]
)
) AND (0x00 = A_data_stat2[0x0000000D]
)
) AND (0x00 = A_data_stat2[0x0000000E]
)
) AND (0x00 = A_data_stat2[0x0000000F]
)
))
THEN 0x0000000000000000
ELSE 0x0000559F32681F20
ENDIF)
[31:0],
let_k_2 = ((((((((((((((((A_data_stat2 WITH [0x00000030] := 0x08)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000040] := 0x08)
 WITH [0x00000041] := 0x00)
 WITH [0x00000042] := 0x00)
 WITH [0x00000043] := 0x00)
 WITH [0x00000044] := 0x00)
 WITH [0x00000045] := 0x00)
 WITH [0x00000046] := 0x00)
 WITH [0x00000047] := 0x00)
,
let_k_3 = (let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
) IN 
( NOT( BVGT((let_k_2[BVPLUS(64, 
0xFFFFAA60D0D76F37, 
let_k_3)
[31:0]] @ (let_k_2[BVPLUS(64, 
0xFFFFAA60D0D76F36, 
let_k_3)
[31:0]] @ (let_k_2[BVPLUS(64, 
0xFFFFAA60D0D76F35, 
let_k_3)
[31:0]] @ (let_k_2[BVPLUS(64, 
0xFFFFAA60D0D76F34, 
let_k_3)
[31:0]] @ (let_k_2[BVPLUS(64, 
0xFFFFAA60D0D76F33, 
let_k_3)
[31:0]] @ (let_k_2[BVPLUS(64, 
0xFFFFAA60D0D76F32, 
let_k_3)
[31:0]] @ (let_k_2[BVPLUS(64, 
0xFFFFAA60D0D76F31, 
let_k_3)
[31:0]] @ let_k_2[BVPLUS(64, 
0xFFFFAA60D0D76F30, 
let_k_3)
[31:0]]
)
)
)
)
)
)
),0x0000000000000001)
)))  );
%----------------------------------------------------
QUERY( FALSE  );
