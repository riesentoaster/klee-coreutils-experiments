n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin8  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg0010  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr211  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr312  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr413  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr514  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr615  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr716  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr817  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr918  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1019  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data20  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1121  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1222  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1323  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1424  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1525  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1626  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1727  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1828  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1929  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2030  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2131  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2232  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2333  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2434  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2535  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2636  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2737  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2838  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2939  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3040  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3141  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3242  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3343  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3444  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3545  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3646  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3747  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3848  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3949  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4050  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4151  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4252  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4353  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg0010[0x00000000]
) );
ASSERT( (0x00 = arg0010[0x00000001]
) );
ASSERT( (0x2B = arg016[0x00000000]
) );
ASSERT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg016[0x00000001],32)
)
[7:0]
),0x00000009)
 );
ASSERT( ( NOT( SBVGT(0x00000041,BVSX(arg016[0x00000001],32)
)
)) );
ASSERT( ( NOT( SBVGT(0x0000000A,(0x000000 @ BVPLUS(32, 
0xFFFFFFA9, 
(0x00000020 | BVSX(arg016[0x00000001],32)

))
[7:0]
))
)) );
ASSERT( ( NOT( (0x2F = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x00 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x38 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x39 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x3A = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x3B = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x3C = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x3D = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x3E = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x3F = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x30 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x31 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x32 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x33 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x34 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x35 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x36 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x37 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x28 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x29 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x2A = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x2B = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x2C = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x2E = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x20 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x21 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x22 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x23 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x24 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x25 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x26 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x27 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x08 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x09 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x0A = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x0B = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x0C = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x0D = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x07 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x78 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x79 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x7A = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x7B = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x7C = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x7D = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x7E = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x70 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x71 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x72 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x73 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x74 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x75 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x76 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x77 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x68 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x69 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x6A = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x6B = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x6C = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x6D = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x6E = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x6F = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x60 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x61 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x62 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x63 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x64 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x65 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x66 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x67 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x58 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x59 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x5A = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x5B = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x5C = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x5D = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x5E = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x5F = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x50 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x51 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x52 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x53 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x54 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x55 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x56 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x57 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x48 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x49 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x4A = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x4B = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x4C = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x4D = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x4E = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x4F = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x41 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x42 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x43 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x44 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x45 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x46 = arg016[0x00000001]
))) );
ASSERT( ( NOT( (0x47 = arg016[0x00000001]
))) );
%----------------------------------------------------
QUERY( FALSE  );
