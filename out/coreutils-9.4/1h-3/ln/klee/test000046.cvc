n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr614  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr715  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr917  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1018  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1220  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1321  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1422  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1523  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1624  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1725  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1826  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1927  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0x00 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000002]
))) );
ASSERT( (0x00 = arg005[0x00000003]
) );
ASSERT( ( NOT( (0x00 = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5391, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]]
))) );
ASSERT( (LET let_k_0 = (0x2F = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5390, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]]
),
let_k_1 = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5390, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]],
let_k_2 = IF(let_k_0)
THEN 0x0000000000000000
ELSE 0x0000000000000001
ENDIF,
let_k_3 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_4 = IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF,
let_k_5 = BVPLUS(64, 
0x0000000000000001, 
let_k_2)
[31:0] IN 
( NOT( (0x2F = (((((((((((((((const_arr513 WITH [0x00000000] := 0x2E)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000001] := IF(let_k_0)
THEN 0x00
ELSE 0x2F
ENDIF)
 WITH [0x00000002] := 0xAB)
 WITH [0x00000003] := 0xAB)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [let_k_5] := let_k_1)
 WITH [BVPLUS(64, 
0x0000000000000002, 
let_k_2)
[31:0]] := let_k_3[BVPLUS(64, 
0xFFFFA9B9BA0B5391, 
let_k_4)
[31:0]])
 WITH [BVPLUS(64, 
0x0000000000000003, 
let_k_2)
[31:0]] := let_k_3[BVPLUS(64, 
0xFFFFA9B9BA0B5392, 
let_k_4)
[31:0]])
 WITH [BVPLUS(64, 
0x0000000000000004, 
let_k_2)
[31:0]] := 0x00)
[let_k_5]
))))  );
ASSERT( (LET let_k_0 = (0x2F = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5390, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]]
),
let_k_1 = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5390, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]],
let_k_2 = IF(let_k_0)
THEN 0x0000000000000000
ELSE 0x0000000000000001
ENDIF,
let_k_3 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_4 = IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF,
let_k_5 = BVPLUS(64, 
0x0000000000000001, 
let_k_2)
[31:0] IN 
( NOT( (0x00 = (((((((((((((((const_arr513 WITH [0x00000000] := 0x2E)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000001] := IF(let_k_0)
THEN 0x00
ELSE 0x2F
ENDIF)
 WITH [0x00000002] := 0xAB)
 WITH [0x00000003] := 0xAB)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [let_k_5] := let_k_1)
 WITH [BVPLUS(64, 
0x0000000000000002, 
let_k_2)
[31:0]] := let_k_3[BVPLUS(64, 
0xFFFFA9B9BA0B5391, 
let_k_4)
[31:0]])
 WITH [BVPLUS(64, 
0x0000000000000003, 
let_k_2)
[31:0]] := let_k_3[BVPLUS(64, 
0xFFFFA9B9BA0B5392, 
let_k_4)
[31:0]])
 WITH [BVPLUS(64, 
0x0000000000000004, 
let_k_2)
[31:0]] := 0x00)
[let_k_5]
))))  );
ASSERT( (LET let_k_0 = (0x2F = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5390, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]]
),
let_k_1 = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5390, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]],
let_k_2 = IF(let_k_0)
THEN 0x0000000000000000
ELSE 0x0000000000000001
ENDIF,
let_k_3 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_4 = IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF,
let_k_5 = (((((((((((((((const_arr513 WITH [0x00000000] := 0x2E)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000001] := IF(let_k_0)
THEN 0x00
ELSE 0x2F
ENDIF)
 WITH [0x00000002] := 0xAB)
 WITH [0x00000003] := 0xAB)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [BVPLUS(64, 
0x0000000000000001, 
let_k_2)
[31:0]] := let_k_1)
 WITH [BVPLUS(64, 
0x0000000000000002, 
let_k_2)
[31:0]] := let_k_3[BVPLUS(64, 
0xFFFFA9B9BA0B5391, 
let_k_4)
[31:0]])
 WITH [BVPLUS(64, 
0x0000000000000003, 
let_k_2)
[31:0]] := let_k_3[BVPLUS(64, 
0xFFFFA9B9BA0B5392, 
let_k_4)
[31:0]])
 WITH [BVPLUS(64, 
0x0000000000000004, 
let_k_2)
[31:0]] := 0x00)
,
let_k_6 = BVPLUS(64, 
0x0000000000000003, 
let_k_2)
[31:0],
let_k_7 = BVPLUS(64, 
0x0000000000000002, 
let_k_2)
[31:0],
let_k_8 = BVPLUS(64, 
0x0000564646DD7A71, 
let_k_2)
,
let_k_9 = IF(((0x2F = let_k_5[let_k_6]
) OR (0b0 = IF((0x2F = let_k_5[let_k_7]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN let_k_8
ELSE BVPLUS(64, 
0x0000564646DD7A73, 
let_k_2)

ENDIF IN 
(0x2F = let_k_5[BVPLUS(64, 
0xFFFFA9B9B9228592, 
IF((0x00 = let_k_5[BVPLUS(64, 
0xFFFFA9B9B9228590, 
let_k_9)
[31:0]]
))
THEN let_k_8
ELSE let_k_9
ENDIF)
[31:0]]
))  );
ASSERT( (LET let_k_0 = (0x2F = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5390, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]]
),
let_k_1 = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0xFFFFA9B9BA0B5390, 
IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF)
[31:0]],
let_k_2 = IF(let_k_0)
THEN 0x0000000000000000
ELSE 0x0000000000000001
ENDIF,
let_k_3 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_4 = IF(((0x2F = arg005[0x00000002]
) OR (0b0 = IF((0x2F = arg005[0x00000001]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x0000564645F4AC70
ELSE 0x0000564645F4AC72
ENDIF,
let_k_5 = (((((((((((((((const_arr513 WITH [0x00000000] := 0x2E)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000001] := IF(let_k_0)
THEN 0x00
ELSE 0x2F
ENDIF)
 WITH [0x00000002] := 0xAB)
 WITH [0x00000003] := 0xAB)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [BVPLUS(64, 
0x0000000000000001, 
let_k_2)
[31:0]] := let_k_1)
 WITH [BVPLUS(64, 
0x0000000000000002, 
let_k_2)
[31:0]] := let_k_3[BVPLUS(64, 
0xFFFFA9B9BA0B5391, 
let_k_4)
[31:0]])
 WITH [BVPLUS(64, 
0x0000000000000003, 
let_k_2)
[31:0]] := let_k_3[BVPLUS(64, 
0xFFFFA9B9BA0B5392, 
let_k_4)
[31:0]])
 WITH [BVPLUS(64, 
0x0000000000000004, 
let_k_2)
[31:0]] := 0x00)
,
let_k_6 = BVPLUS(64, 
0x0000000000000003, 
let_k_2)
[31:0],
let_k_7 = BVPLUS(64, 
0x0000000000000002, 
let_k_2)
[31:0],
let_k_8 = BVPLUS(64, 
0x0000564646DD7A71, 
let_k_2)
,
let_k_9 = IF(((0x2F = let_k_5[let_k_6]
) OR (0b0 = IF((0x2F = let_k_5[let_k_7]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN let_k_8
ELSE BVPLUS(64, 
0x0000564646DD7A73, 
let_k_2)

ENDIF IN 
(0x2F = let_k_5[BVPLUS(64, 
0xFFFFA9B9B9228591, 
IF((0x00 = let_k_5[BVPLUS(64, 
0xFFFFA9B9B9228590, 
let_k_9)
[31:0]]
))
THEN let_k_8
ELSE let_k_9
ENDIF)
[31:0]]
))  );
ASSERT( (0x0C = arg005[0x00000000]
) );
%----------------------------------------------------
QUERY( FALSE  );
