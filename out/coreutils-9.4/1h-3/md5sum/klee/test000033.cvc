n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg008  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin9  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr110  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr211  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr714  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr815  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1117  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1218  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1319  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1420  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1721  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1822  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2023  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2324  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2425  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2526  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2627  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2828  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3029  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data30  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3231  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3332  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3433  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3634  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3735  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3836  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3937  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4038  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4139  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4240  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4341  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4442  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4643  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4744  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4945  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5046  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5247  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5548  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5749  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5850  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5951  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6052  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6253  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6354  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6555  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6656  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6757  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6958  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7159  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7260  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7361  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7462  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7563  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7664  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7765  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8066  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8167  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8268  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8369  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8670  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8771  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8872  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9073  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9174  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9275  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9376  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9477  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9678  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9779  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9880  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9981  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10082  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10183  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10284  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10385  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10486  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10587  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10788  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10889  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10990  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11191  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x00 = arg008[0x00000001]
) );
ASSERT( (0x41 = arg008[0x00000000]
) );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((const_arr211 WITH [0x00000000] := 0x08)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [0x00000006] := 0xAB)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0x00)
 WITH [0x00000009] := 0xAF)
 WITH [0x0000000A] := 0xE8)
 WITH [0x0000000B] := 0xF5)
 WITH [0x0000000C] := 0xE7)
 WITH [0x0000000D] := 0x55)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0xA0)
 WITH [0x00000011] := 0xCE)
 WITH [0x00000012] := 0x2F)
 WITH [0x00000013] := 0xF4)
 WITH [0x00000014] := 0xE7)
 WITH [0x00000015] := 0x55)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
,
let_k_1 = BVPLUS(64, 
0xFFFFAA1809887030, 
IF(((((((((0x00 = A_data_stat2[0x00000008]
) AND (0x00 = A_data_stat2[0x00000009]
)
) AND (0x00 = A_data_stat2[0x0000000A]
)
) AND (0x00 = A_data_stat2[0x0000000B]
)
) AND (0x00 = A_data_stat2[0x0000000C]
)
) AND (0x00 = A_data_stat2[0x0000000D]
)
) AND (0x00 = A_data_stat2[0x0000000E]
)
) AND (0x00 = A_data_stat2[0x0000000F]
)
))
THEN 0x0000000000000000
ELSE 0x000055E7F6778FE0
ENDIF)
[31:0] IN 
(0x2 = ((((((((((((((((A_data_stat2 WITH [0x00000030] := 0x08)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000040] := 0x08)
 WITH [0x00000041] := 0x00)
 WITH [0x00000042] := 0x00)
 WITH [0x00000043] := 0x00)
 WITH [0x00000044] := 0x00)
 WITH [0x00000045] := 0x00)
 WITH [0x00000046] := 0x00)
 WITH [0x00000047] := 0x00)
[BVPLUS(32, 
0x00000001, 
BVPLUS(64, 
0xFFFFAA180BD03178, 
(let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
))
[31:0])
][7:4]
))  );
ASSERT( (0x2F = arg016[0x00000000]
) );
ASSERT( (0x74 = arg016[0x00000001]
) );
%----------------------------------------------------
QUERY( FALSE  );
