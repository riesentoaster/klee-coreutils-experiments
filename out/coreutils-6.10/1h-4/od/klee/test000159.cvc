n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1914  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3015  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4717  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5519  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data20  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5721  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr822  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5923  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6824  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1325  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7226  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7427  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7828  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8029  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2730  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9831  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9932  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10033  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10134  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10235  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr636  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10537  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10638  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11139  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11240  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11641  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13042  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13843  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14944  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15045  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15146  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15247  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15448  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15549  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15950  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x3D = arg005[0x00000003]
) );
ASSERT( (0x66 = arg005[0x00000002]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000005]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000006]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000007]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000008]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000009]
))) );
ASSERT( (0x63 = arg005[0x00000004]
) );
ASSERT( (0x61 = (arg005 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0x0000000000000005, 
IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
) );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
(0x66 = let_k_0[BVPLUS(64, 
0x0000000000000006, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x44 = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x46 = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
( NOT( (0x4C = let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]],32)
)
)
)  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(let_k_0[BVPLUS(64, 
0x0000000000000008, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]],32)
)
)
)  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(let_k_0[BVPLUS(64, 
0x0000000000000009, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]],32)
)
)
)  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg005[0x00000005]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF,
let_k_2 = BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(let_k_0[BVPLUS(64, 
0x0000000000000007, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]],32)
)
,64)
,
let_k_3 = BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000006, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
,
let_k_4 = BVPLUS(64, 
BVPLUS(64, 
(let_k_2[60:0] @ 0b000
), 
(let_k_2[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(let_k_0[BVPLUS(64, 
0x0000000000000008, 
let_k_3)
[31:0]],32)
)
,64)
)
 IN 
( NOT( BVGT(BVPLUS(64, 
BVPLUS(64, 
(let_k_4[60:0] @ 0b000
), 
(let_k_4[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(let_k_0[BVPLUS(64, 
0x0000000000000009, 
let_k_3)
[31:0]],32)
)
,64)
)
,0x0000000000000010)
)))  );
%----------------------------------------------------
QUERY( FALSE  );
