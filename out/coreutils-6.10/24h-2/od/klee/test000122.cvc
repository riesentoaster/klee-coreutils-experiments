n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data14  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data15  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4516  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4617  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4918  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5520  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5921  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6222  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4823  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7124  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1025  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr726  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7527  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9128  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10529  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11130  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11431  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11932  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12033  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12134  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12335  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14036  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14137  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14638  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x00 = arg005[0x00000003]
) );
ASSERT( (0x66 = arg005[0x00000002]
) );
ASSERT( (0x4C = arg017[0x00000001]
) );
ASSERT( (0x64 = arg017[0x00000000]
) );
ASSERT( (0x61 = (arg017 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0x0000000000000002, 
IF((0x7A = arg017[0x00000002]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
) );
ASSERT( (LET let_k_0 = (arg017 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF((0x7A = arg017[0x00000002]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF IN 
(0x00 = let_k_0[BVPLUS(64, 
0x0000000000000003, 
BVPLUS(64, 
let_k_1, 
IF((0x7A = let_k_0[BVPLUS(64, 
0x0000000000000003, 
let_k_1)
[31:0]]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
)
[31:0]]
))  );
ASSERT( (0b0 = IF((0x7A = arg017[0x00000002]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000000][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000001][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000002][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000003][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000004][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000005][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000006][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000007][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000008][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000009][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x0000000A][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x0000000B][6:0]
) );
ASSERT( (0b0 = IF((0x7A = (arg017 WITH [0x0000000A] := 0x00)
[BVPLUS(64, 
0x0000000000000003, 
IF((0x7A = arg017[0x00000002]
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
) );
%----------------------------------------------------
QUERY( FALSE  );
