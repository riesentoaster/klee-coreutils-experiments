n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg009  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr614  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr715  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr917  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1018  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1220  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1321  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1422  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1523  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1624  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1725  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1826  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1927  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2129  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2230  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2331  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2432  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2533  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2634  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2735  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2836  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2937  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3038  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3139  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3240  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3341  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3442  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3543  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3644  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3745  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3846  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3947  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4048  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4149  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4250  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4351  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4452  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4553  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4654  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4755  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4856  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4957  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5058  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5159  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5260  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5361  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( ( NOT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
)) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2F = arg005[0x00000000]
) );
ASSERT( (0x00 = arg005[0x00000004]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000002]
))) );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF(((0x2F = arg005[0x00000003]
) OR (0b0 = IF((0x2F = arg005[0x00000002]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x000055FF5D8FAFE1
ELSE 0x000055FF5D8FAFE3
ENDIF IN 
( NOT( (0x2F = ((((((((((const_arr1220 WITH [0x00000000] := 0x2E)
 WITH [0x00000001] := 0x2F)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000002] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705020, 
let_k_1)
[31:0]])
 WITH [0x00000003] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705021, 
let_k_1)
[31:0]])
 WITH [0x00000004] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705022, 
let_k_1)
[31:0]])
 WITH [0x00000005] := 0x00)
[BVPLUS(64, 
0x0000000000000002, 
IF((0x2F = arg005[0x00000001]
))
THEN 0xFFFFFFFFFFFFFFFF
ELSE 0x0000000000000000
ENDIF)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF(((0x2F = arg005[0x00000003]
) OR (0b0 = IF((0x2F = arg005[0x00000002]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x000055FF5D8FAFE1
ELSE 0x000055FF5D8FAFE3
ENDIF IN 
( NOT( (0x00 = ((((((((((const_arr1220 WITH [0x00000000] := 0x2E)
 WITH [0x00000001] := 0x2F)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000002] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705020, 
let_k_1)
[31:0]])
 WITH [0x00000003] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705021, 
let_k_1)
[31:0]])
 WITH [0x00000004] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705022, 
let_k_1)
[31:0]])
 WITH [0x00000005] := 0x00)
[BVPLUS(64, 
0x0000000000000002, 
IF((0x2F = arg005[0x00000001]
))
THEN 0xFFFFFFFFFFFFFFFF
ELSE 0x0000000000000000
ENDIF)
[31:0]]
))))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF(((0x2F = arg005[0x00000003]
) OR (0b0 = IF((0x2F = arg005[0x00000002]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x000055FF5D8FAFE1
ELSE 0x000055FF5D8FAFE3
ENDIF,
let_k_2 = ((((((((((const_arr1220 WITH [0x00000000] := 0x2E)
 WITH [0x00000001] := 0x2F)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000002] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705020, 
let_k_1)
[31:0]])
 WITH [0x00000003] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705021, 
let_k_1)
[31:0]])
 WITH [0x00000004] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705022, 
let_k_1)
[31:0]])
 WITH [0x00000005] := 0x00)
,
let_k_3 = IF((0x2F = arg005[0x00000001]
))
THEN 0xFFFFFFFFFFFFFFFF
ELSE 0x0000000000000000
ENDIF,
let_k_4 = BVPLUS(64, 
0x000055FF5EC4F712, 
let_k_3)
,
let_k_5 = IF(((0x2F = let_k_2[BVPLUS(64, 
0x0000000000000004, 
let_k_3)
[31:0]]
) OR (0b0 = IF((0x2F = let_k_2[BVPLUS(64, 
0x0000000000000003, 
let_k_3)
[31:0]]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN let_k_4
ELSE BVPLUS(64, 
0x000055FF5EC4F714, 
let_k_3)

ENDIF IN 
(0x2F = let_k_2[BVPLUS(64, 
0xFFFFAA00A13B08F2, 
IF((0x00 = let_k_2[BVPLUS(64, 
0xFFFFAA00A13B08F0, 
let_k_5)
[31:0]]
))
THEN let_k_4
ELSE let_k_5
ENDIF)
[31:0]]
))  );
ASSERT( (LET let_k_0 = (arg005 WITH [0x0000000A] := 0x00)
,
let_k_1 = IF(((0x2F = arg005[0x00000003]
) OR (0b0 = IF((0x2F = arg005[0x00000002]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN 0x000055FF5D8FAFE1
ELSE 0x000055FF5D8FAFE3
ENDIF,
let_k_2 = ((((((((((const_arr1220 WITH [0x00000000] := 0x2E)
 WITH [0x00000001] := 0x2F)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000002] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705020, 
let_k_1)
[31:0]])
 WITH [0x00000003] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705021, 
let_k_1)
[31:0]])
 WITH [0x00000004] := let_k_0[BVPLUS(64, 
0xFFFFAA00A2705022, 
let_k_1)
[31:0]])
 WITH [0x00000005] := 0x00)
,
let_k_3 = IF((0x2F = arg005[0x00000001]
))
THEN 0xFFFFFFFFFFFFFFFF
ELSE 0x0000000000000000
ENDIF,
let_k_4 = BVPLUS(64, 
0x000055FF5EC4F712, 
let_k_3)
,
let_k_5 = IF(((0x2F = let_k_2[BVPLUS(64, 
0x0000000000000004, 
let_k_3)
[31:0]]
) OR (0b0 = IF((0x2F = let_k_2[BVPLUS(64, 
0x0000000000000003, 
let_k_3)
[31:0]]
))
THEN 0x01
ELSE 0x00
ENDIF[0:0]
)
))
THEN let_k_4
ELSE BVPLUS(64, 
0x000055FF5EC4F714, 
let_k_3)

ENDIF IN 
(0x2F = let_k_2[BVPLUS(64, 
0xFFFFAA00A13B08F1, 
IF((0x00 = let_k_2[BVPLUS(64, 
0xFFFFAA00A13B08F0, 
let_k_5)
[31:0]]
))
THEN let_k_4
ELSE let_k_5
ENDIF)
[31:0]]
))  );
ASSERT( (0x74 = arg005[0x00000001]
) );
ASSERT( (0x2F = arg005[0x00000003]
) );
%----------------------------------------------------
QUERY( FALSE  );
