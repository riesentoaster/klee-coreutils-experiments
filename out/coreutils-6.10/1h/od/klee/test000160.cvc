n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1914  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data15  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr716  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4218  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5520  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6421  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7422  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7823  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8024  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data25  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10226  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10527  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11328  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12429  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5430  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12631  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12732  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13033  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13934  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14835  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4736  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14937  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15038  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15239  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15340  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15541  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15942  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16243  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16544  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16745  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17046  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17347  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17648  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17749  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18150  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18251  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10652  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x00 = arg005[0x00000003]
) );
ASSERT( (0x66 = arg005[0x00000002]
) );
ASSERT( (0x66 = arg017[0x00000000]
) );
ASSERT( ( NOT( (0x44 = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x46 = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x4C = arg017[0x00000001]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000002],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000003],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000004],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000005],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000006],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000007],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000008],32)
)
)
 );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000009],32)
)
)
 );
ASSERT( (LET let_k_0 = BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000001],32)
)
,64)
,
let_k_1 = BVPLUS(64, 
BVPLUS(64, 
(let_k_0[60:0] @ 0b000
), 
(let_k_0[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000002],32)
)
,64)
)
,
let_k_2 = BVPLUS(64, 
BVPLUS(64, 
(let_k_1[60:0] @ 0b000
), 
(let_k_1[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000003],32)
)
,64)
)
,
let_k_3 = BVPLUS(64, 
BVPLUS(64, 
(let_k_2[60:0] @ 0b000
), 
(let_k_2[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000004],32)
)
,64)
)
,
let_k_4 = BVPLUS(64, 
BVPLUS(64, 
(let_k_3[60:0] @ 0b000
), 
(let_k_3[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000005],32)
)
,64)
)
,
let_k_5 = BVPLUS(64, 
BVPLUS(64, 
(let_k_4[60:0] @ 0b000
), 
(let_k_4[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000006],32)
)
,64)
)
,
let_k_6 = BVPLUS(64, 
BVPLUS(64, 
(let_k_5[60:0] @ 0b000
), 
(let_k_5[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000007],32)
)
,64)
)
,
let_k_7 = BVPLUS(64, 
BVPLUS(64, 
(let_k_6[60:0] @ 0b000
), 
(let_k_6[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000008],32)
)
,64)
)
 IN 
BVGT(BVPLUS(64, 
BVPLUS(64, 
(let_k_7[60:0] @ 0b000
), 
(let_k_7[62:0] @ 0b0
))
, 
BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000009],32)
)
,64)
)
,0x0000000000000010)
)  );
ASSERT( (LET let_k_0 = arg017[0x00000001] IN 
((0x37 = let_k_0
) OR ((0x36 = let_k_0
) OR ((0x35 = let_k_0
) OR ((0x34 = let_k_0
) OR ((0x33 = let_k_0
) OR ((0x32 = let_k_0
) OR ((0x31 = let_k_0
) OR ((0x30 = let_k_0
) OR ((0x39 = let_k_0
) OR (0x38 = let_k_0
)
)
)
)
)
)
)
)
)
))  );
%----------------------------------------------------
QUERY( FALSE  );
