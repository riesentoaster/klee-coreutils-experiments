n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1514  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data15  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1617  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4418  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5719  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6420  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data21  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7622  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3823  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7824  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8925  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9626  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9727  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9828  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9929  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11330  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11631  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11732  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12933  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13434  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14735  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14836  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14937  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15138  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15339  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15640  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16241  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17242  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17443  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17844  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000004,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
))) );
ASSERT( ( NOT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0x2D = arg005[0x00000000]
))) );
ASSERT( (0x2D = arg017[0x00000000]
) );
ASSERT( (0x2D = arg017[0x00000001]
) );
ASSERT( (0x73 = arg017[0x00000002]
) );
ASSERT( (0x6B = arg017[0x00000003]
) );
ASSERT( (0x69 = arg017[0x00000004]
) );
ASSERT( (0x70 = arg017[0x00000005]
) );
ASSERT( (0x2D = arg017[0x00000006]
) );
ASSERT( (0x62 = arg017[0x00000007]
) );
ASSERT( (0x79 = arg017[0x00000008]
) );
ASSERT( (0x74 = arg017[0x00000009]
) );
ASSERT( (0x2B = arg028[0x00000000]
) );
ASSERT( (0x30 = arg028[0x00000001]
) );
ASSERT( (0x00000078 = (0x00000020 | BVSX(arg028[0x00000002],32)

)
) );
ASSERT( ( NOT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg028[0x00000003],32)
)
[7:0]
),0x00000009)
)) );
ASSERT( ( NOT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg028[0x00000004],32)
)
[7:0]
),0x00000009)
)) );
ASSERT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg028[0x00000005],32)
)
[7:0]
),0x00000009)
 );
ASSERT( ( NOT( SBVGT(0x00000041,BVSX(arg028[0x00000005],32)
)
)) );
ASSERT( ( NOT( SBVGT(0x00000010,(0x000000 @ BVPLUS(32, 
0xFFFFFFA9, 
(0x00000020 | BVSX(arg028[0x00000005],32)

))
[7:0]
))
)) );
ASSERT( (0x47 = BVSX(arg028[0x00000005],32)
[7:0]
) );
ASSERT( (LET let_k_0 = arg028[0x00000006] IN 
((0x44 = let_k_0
) OR (0x42 = let_k_0
)
))  );
ASSERT( (LET let_k_0 = BVPLUS(64, 
((0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg028[0x00000003],32)
)
[7:0]
)[59:0] @ 0x0
), 
(0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg028[0x00000004],32)
)
[7:0]
))
,
let_k_1 = IF(BVGT(BVMULT(128, 
0x000000000000000000000000000003E8, 
(0x0000000000000000 @ let_k_0
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0xFFFFFFFFFFFFFFFF
ELSE BVPLUS(64, 
BVPLUS(64, 
(let_k_0[53:0] @ 0b0000000000
), 
( BVUMINUS( (let_k_0[58:0] @ 0b00000
))))
, 
(let_k_0[60:0] @ 0b000
))

ENDIF,
let_k_2 = BVGT(BVMULT(128, 
0x000000000000000000000000000003E8, 
(0x0000000000000000 @ let_k_1
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
,
let_k_3 = BVGT(BVMULT(128, 
0x000000000000000000000000000003E8, 
(0x0000000000000000 @ let_k_0
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
,
let_k_4 = (IF(BVGT(BVMULT(128, 
0x000000000000000000000000000003E8, 
(0x0000000000000000 @ IF(let_k_2)
THEN 0xFFFFFFFFFFFFFFFF
ELSE BVPLUS(64, 
BVPLUS(64, 
(let_k_1[53:0] @ 0b0000000000
), 
( BVUMINUS( (let_k_1[58:0] @ 0b00000
))))
, 
(let_k_1[60:0] @ 0b000
))

ENDIF
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0x00000001
ELSE 0x00000000
ENDIF | (IF(let_k_2)
THEN 0x00000001
ELSE 0x00000000
ENDIF | IF(let_k_3)
THEN 0x00000001
ELSE 0x00000000
ENDIF
)
) IN 
(0x00000000 = IF((0x00 = arg028[0x00000007]
))
THEN let_k_4
ELSE (0x00000002 | let_k_4
)
ENDIF
))  );
%----------------------------------------------------
QUERY( FALSE  );
