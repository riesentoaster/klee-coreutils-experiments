n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data14  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2115  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3516  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4417  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4718  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5319  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr820  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6121  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data22  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6623  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6925  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr626  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10427  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10628  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11129  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11230  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11331  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11732  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12533  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12934  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13735  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13836  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14437  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14838  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4239  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15040  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15441  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15642  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15843  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16044  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16145  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16746  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17147  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17448  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17549  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17850  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8751  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17952  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18053  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18354  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18955  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13456  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19257  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19758  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19959  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr20060  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr20161  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr20262  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr20363  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr20464  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000004,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
))) );
ASSERT( ( NOT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x00 = arg005[0x00000006]
) );
ASSERT( (0x73 = arg005[0x00000002]
) );
ASSERT( (0x6B = arg005[0x00000003]
) );
ASSERT( (0x69 = arg005[0x00000004]
) );
ASSERT( (0x70 = arg005[0x00000005]
) );
ASSERT( (0x2B = arg017[0x00000000]
) );
ASSERT( (0x30 = arg017[0x00000001]
) );
ASSERT( (0x00000078 = (0x00000020 | BVSX(arg017[0x00000002],32)

)
) );
ASSERT( ( NOT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000003],32)
)
[7:0]
),0x00000009)
)) );
ASSERT( ( NOT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000004],32)
)
[7:0]
),0x00000009)
)) );
ASSERT( ( NOT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000005],32)
)
[7:0]
),0x00000009)
)) );
ASSERT( ( NOT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000006],32)
)
[7:0]
),0x00000009)
)) );
ASSERT( ( NOT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000007],32)
)
[7:0]
),0x00000009)
)) );
ASSERT( SBVGT((0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000008],32)
)
[7:0]
),0x00000009)
 );
ASSERT( ( NOT( SBVGT(0x00000041,BVSX(arg017[0x00000008],32)
)
)) );
ASSERT( ( NOT( SBVGT(0x00000010,(0x000000 @ BVPLUS(32, 
0xFFFFFFA9, 
(0x00000020 | BVSX(arg017[0x00000008],32)

))
[7:0]
))
)) );
ASSERT( (0x47 = BVSX(arg017[0x00000008],32)
[7:0]
) );
ASSERT( (LET let_k_0 = arg017[0x00000009] IN 
((0x44 = let_k_0
) OR (0x42 = let_k_0
)
))  );
ASSERT( (0x2F = arg028[0x00000000]
) );
ASSERT( (0x74 = arg028[0x00000001]
) );
ASSERT( (0x6D = arg028[0x00000002]
) );
ASSERT( (0x70 = arg028[0x00000003]
) );
ASSERT( (0x2F = arg028[0x00000004]
) );
ASSERT( (0x73 = arg028[0x00000005]
) );
ASSERT( (0x61 = arg028[0x00000006]
) );
ASSERT( (0x6E = arg028[0x00000007]
) );
ASSERT( (0x64 = arg028[0x00000008]
) );
ASSERT( (0x62 = arg028[0x00000009]
) );
ASSERT( (LET let_k_0 = BVPLUS(64, 
(BVPLUS(64, 
(BVPLUS(64, 
(BVPLUS(64, 
((0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000003],32)
)
[7:0]
)[59:0] @ 0x0
), 
(0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000004],32)
)
[7:0]
))
[59:0] @ 0x0
), 
(0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000005],32)
)
[7:0]
))
[59:0] @ 0x0
), 
(0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000006],32)
)
[7:0]
))
[59:0] @ 0x0
), 
(0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000007],32)
)
[7:0]
))
,
let_k_1 = IF(BVGT(BVMULT(128, 
0x000000000000000000000000000003E8, 
(0x0000000000000000 @ let_k_0
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0xFFFFFFFFFFFFFFFF
ELSE BVPLUS(64, 
BVPLUS(64, 
(let_k_0[53:0] @ 0b0000000000
), 
( BVUMINUS( (let_k_0[58:0] @ 0b00000
))))
, 
(let_k_0[60:0] @ 0b000
))

ENDIF,
let_k_2 = IF(BVGT(BVMULT(128, 
0x000000000000000000000000000003E8, 
(0x0000000000000000 @ let_k_1
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0xFFFFFFFFFFFFFFFF
ELSE BVPLUS(64, 
BVPLUS(64, 
(let_k_1[53:0] @ 0b0000000000
), 
( BVUMINUS( (let_k_1[58:0] @ 0b00000
))))
, 
(let_k_1[60:0] @ 0b000
))

ENDIF IN 
(0x0000000000000000 = IF(BVGT(BVMULT(128, 
0x000000000000000000000000000003E8, 
(0x0000000000000000 @ let_k_2
))
,0x0000000000000000FFFFFFFFFFFFFFFF)
)
THEN 0xFFFFFFFFFFFFFFFF
ELSE BVPLUS(64, 
BVPLUS(64, 
(let_k_2[53:0] @ 0b0000000000
), 
( BVUMINUS( (let_k_2[58:0] @ 0b00000
))))
, 
(let_k_2[60:0] @ 0b000
))

ENDIF
))  );
%----------------------------------------------------
QUERY( FALSE  );
