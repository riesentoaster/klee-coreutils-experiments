n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2514  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr815  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4116  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5517  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1018  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5820  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5921  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6022  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6823  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6924  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data25  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8326  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8627  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9328  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9729  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr10430  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2131  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11332  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12533  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12734  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2935  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12936  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13137  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13538  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14039  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14240  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14741  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15042  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15643  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15844  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0x2D = arg017[0x00000000]
))) );
ASSERT( ( NOT( (0x2B = arg017[0x00000000]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000000],32)
)
)
 );
ASSERT( (0x00 = arg017[0x00000001]
) );
ASSERT( ( NOT( (0x30 = arg017[0x00000000]
))) );
ASSERT( SBVGT(0x00000008,(0x000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000000],32)
)
[7:0]
))
 );
ASSERT( (0x2F = arg005[0x00000000]
) );
ASSERT( (0x74 = arg005[0x00000001]
) );
ASSERT( (0x6D = arg005[0x00000002]
) );
ASSERT( (0x70 = arg005[0x00000003]
) );
ASSERT( (0x2F = arg005[0x00000004]
) );
ASSERT( (0x73 = arg005[0x00000005]
) );
ASSERT( (0x61 = arg005[0x00000006]
) );
ASSERT( (0x6E = arg005[0x00000007]
) );
ASSERT( (0x64 = arg005[0x00000008]
) );
ASSERT( (0x62 = arg005[0x00000009]
) );
ASSERT( (LET let_k_0 = (0x00000000000000 @ BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg017[0x00000000],32)
)
[7:0]
) IN 
(0x0000000000000001 = IF(BVGT(0x0000000000002000,let_k_0)
)
THEN let_k_0
ELSE 0x0000000000002000
ENDIF
))  );
%----------------------------------------------------
QUERY( FALSE  );
