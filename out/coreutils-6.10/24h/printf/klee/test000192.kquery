array A_data_stat[144] : w32 -> w8 = symbolic
array B_data_stat[144] : w32 -> w8 = symbolic
array arg00[11] : w32 -> w8 = symbolic
array arg01[11] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array n_args[4] : w32 -> w8 = symbolic
array stdin_stat[144] : w32 -> w8 = symbolic
array stdout_stat[144] : w32 -> w8 = symbolic
(query [(Ult N0:(ReadLSB w32 0 n_args)
              4)
         (Slt 0 N0)
         (Eq false (Eq 1 N0))
         (Eq false (Eq 2 N0))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A_data_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 A_data_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 B_data_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 B_data_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdin_stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout_stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdout_stat)
              65536)
         (Eq 45 (Read w8 0 arg00))
         (Eq 37 (Read w8 1 arg00))
         (Eq false
             (Eq 37 N1:(Read w8 2 arg00)))
         (Eq false (Eq 98 N1))
         (Eq false (Eq 73 N1))
         (Eq false (Eq 32 N1))
         (Eq false (Eq 35 N1))
         (Eq false (Eq 39 N1))
         (Eq false (Eq 43 N1))
         (Eq false (Eq 45 N1))
         (Eq false (Eq 48 N1))
         (Eq false (Eq 42 N1))
         (Ult N2:(Add w32 4294967248 (SExt w32 N1))
              10)
         (Ult (Add w32 4294967248
                       N3:(SExt w32 (Read w8 3 arg00)))
              10)
         (Ult (Add w32 4294967248
                       N4:(SExt w32 (Read w8 4 arg00)))
              10)
         (Ult (Add w32 4294967248
                       N5:(SExt w32 (Read w8 5 arg00)))
              10)
         (Ult (Add w32 4294967248
                       (SExt w32 (Read w8 6 arg00)))
              10)
         (Ult (Add w32 4294967248
                       (SExt w32 (Read w8 7 arg00)))
              10)
         (Eq false
             (Ult (Add w32 4294967248
                           (SExt w32 N6:(Read w8 8 arg00)))
                  10))
         (Eq false (Eq 46 N6))
         (Or (Eq 76 N6)
             (Or (Eq 108 N6)
                 (Or (Eq 106 N6)
                     (Or (Eq 104 N6)
                         (Or (Eq 116 N6) (Eq 122 N6))))))
         (Eq 45 (Read w8 0 arg01))
         (Eq 53 (Read w8 1 arg01))
         (Eq 46 (Read w8 2 arg01))
         (Eq 0
             (And w32 (ZExt w32 (ReadLSB w16 N7:(Extract w32 0 (Add w64 256
                                                                        (Mul w64 2
                                                                                 (SExt w64 N8:(SExt w32 (Read w8 3 arg01)))))) const_arr1))
                      2048))
         (Eq 101 (Or w32 N8 32))
         (Eq 45 (Read w8 4 arg01))
         (Eq false
             (Eq 0
                 (And w32 (ZExt w32 (ReadLSB w16 N9:(Extract w32 0 (Add w64 256
                                                                            (Mul w64 2
                                                                                     (SExt w64 N10:(SExt w32 (Read w8 5 arg01)))))) const_arr1))
                          2048)))
         (Eq false
             (Eq 0
                 (And w32 (ZExt w32 (ReadLSB w16 N11:(Extract w32 0 (Add w64 256
                                                                             (Mul w64 2
                                                                                      (SExt w64 N12:(SExt w32 (Read w8 6 arg01)))))) const_arr1))
                          2048)))
         (Eq false
             (Eq 0
                 (And w32 (ZExt w32 (ReadLSB w16 N13:(Extract w32 0 (Add w64 256
                                                                             (Mul w64 2
                                                                                      (SExt w64 N14:(SExt w32 (Read w8 7 arg01)))))) const_arr1))
                          2048)))
         (Eq false
             (Eq 0
                 (And w32 (ZExt w32 (ReadLSB w16 N15:(Extract w32 0 (Add w64 256
                                                                             (Mul w64 2
                                                                                      (SExt w64 N16:(SExt w32 (Read w8 8 arg01)))))) const_arr1))
                          2048)))
         (Eq false
             (Eq 0
                 (And w32 (ZExt w32 (ReadLSB w16 N17:(Extract w32 0 (Add w64 256
                                                                             (Mul w64 2
                                                                                      (SExt w64 N18:(SExt w32 (Read w8 9 arg01)))))) const_arr1))
                          2048)))
         (Slt N19:(Add w32 4294967248
                           (Add w32 (Mul w32 10
                                             (Add w32 4294967248
                                                      (Add w32 (Mul w32 10
                                                                        (Add w32 4294967248
                                                                                 (Add w32 (Mul w32 10 (Add w32 4294967248 N10))
                                                                                          N12)))
                                                               N14)))
                                    N16))
              4973)
         (Slt N20:(Mul w32 4294967295
                           (Add w32 4294967248
                                    (Add w32 (Mul w32 10 N19) N18)))
              0)
         (Eq false
             (Eq 0
                 (And w32 N21:(Sub w32 0 N20) 1)))
         (Eq false
             (Eq 0 N22:(AShr w32 N21 1)))
         (Eq false
             (Eq 0 (And w32 N22 1)))
         (Eq false
             (Eq 0 N23:(AShr w32 N22 1)))
         (Eq false
             (Eq 0 (And w32 N23 1)))
         (Eq false
             (Eq 0 N24:(AShr w32 N23 1)))
         (Eq false
             (Eq 0 (And w32 N24 1)))
         (Eq false
             (Eq 0 N25:(AShr w32 N24 1)))
         (Eq false
             (Eq 0 (And w32 N25 1)))
         (Eq false
             (Eq 0 N26:(AShr w32 N25 1)))
         (Eq 0 (And w32 N26 1))
         (Eq false
             (Eq 0
                 (And w32 N27:(AShr w32 N26 1) 1)))
         (Eq false
             (Eq 0 N28:(AShr w32 N27 1)))
         (Eq false
             (Eq 0 (And w32 N28 1)))
         (Eq false
             (Eq 0 N29:(AShr w32 N28 1)))
         (Eq false
             (Eq 0 (And w32 N29 1)))
         (Eq false
             (Eq 0 N30:(AShr w32 N29 1)))
         (Eq false
             (Eq 0 (And w32 N30 1)))
         (Eq false
             (Eq 0 N31:(AShr w32 N30 1)))
         (Eq false
             (Eq 0 (And w32 N31 1)))
         (Eq false
             (Eq 0 N32:(AShr w32 N31 1)))
         (Eq false
             (Eq 0 (And w32 N32 1)))
         (Eq false
             (Eq 0 N33:(AShr w32 N32 1)))
         (Eq false
             (Eq 0 (And w32 N33 1)))
         (Eq false
             (Eq 0 N34:(AShr w32 N33 1)))
         (Eq false
             (Eq 0 (And w32 N34 1)))
         (Eq false
             (Eq 0 N35:(AShr w32 N34 1)))
         (Eq false
             (Eq 0 (And w32 N35 1)))
         (Slt (Add w32 4294967248
                       (Add w32 (Mul w32 10
                                         (Add w32 4294967248
                                                  (Add w32 (Mul w32 10
                                                                    (Add w32 4294967248
                                                                             (Add w32 (Mul w32 10 N2) N3)))
                                                           N4)))
                                N5))
              4095)
         (Eq 102 (Read w8 9 arg00))]
        false)
