n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data14  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2915  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4516  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data17  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5419  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr820  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5821  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6222  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6623  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7025  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7226  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7427  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8228  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8329  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8430  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1331  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8632  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8833  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8934  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9035  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x3D = arg005[0x00000003]
) );
ASSERT( (0x66 = arg005[0x00000002]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000004]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000005]
))) );
ASSERT( (0x00 = arg005[0x00000006]
) );
ASSERT( (LET let_k_0 = arg005[0x00000004] IN 
((0x78 = let_k_0
) OR ((0x75 = let_k_0
) OR ((0x6F = let_k_0
) OR (0x64 = let_k_0
)
)
)
))  );
ASSERT( ( NOT( (0x43 = arg005[0x00000005]
))) );
ASSERT( ( NOT( (0x49 = arg005[0x00000005]
))) );
ASSERT( ( NOT( (0x4C = arg005[0x00000005]
))) );
ASSERT( ( NOT( (0x53 = arg005[0x00000005]
))) );
ASSERT( BVGT(0x0000000A,BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000005],32)
)
)
 );
ASSERT( BVGT(BVSX(BVPLUS(32, 
0xFFFFFFD0, 
BVSX(arg005[0x00000005],32)
)
,64)
,0x0000000000000008)
 );
ASSERT( (LET let_k_0 = arg005[0x00000004] IN 
((0x64 = let_k_0
) OR ((0x6F = let_k_0
) OR ((0x78 = let_k_0
) OR (0x75 = let_k_0
)
)
)
))  );
%----------------------------------------------------
QUERY( FALSE  );
