n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg007  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr310  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr411  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr914  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1015  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1116  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1217  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1318  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1419  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1520  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr821  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1622  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1723  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1824  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1925  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2026  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2127  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2228  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2329  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2430  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2531  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2632  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000002,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat2[0x0000000B] @ (A_data_stat2[0x0000000A] @ (A_data_stat2[0x00000009] @ A_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat2[0x0000003F] @ (A_data_stat2[0x0000003E] @ (A_data_stat2[0x0000003D] @ (A_data_stat2[0x0000003C] @ (A_data_stat2[0x0000003B] @ (A_data_stat2[0x0000003A] @ (A_data_stat2[0x00000039] @ A_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( ( NOT( (0x2D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x00 = arg005[0x00000001]
))) );
ASSERT( (0x50 = BVSX(arg005[0x00000001],32)
[7:0]
) );
ASSERT( (0x00 = arg016[0x00000033]
) );
ASSERT( (0x2D = arg016[0x00000001]
) );
ASSERT( (0x2F = arg016[0x00000000]
) );
ASSERT( (0x27 = arg016[0x00000002]
) );
ASSERT( (0x27 = arg016[0x00000003]
) );
ASSERT( (0x27 = arg016[0x00000004]
) );
ASSERT( (0x27 = arg016[0x00000005]
) );
ASSERT( (0x27 = arg016[0x00000006]
) );
ASSERT( (0x27 = arg016[0x00000007]
) );
ASSERT( (0x27 = arg016[0x00000008]
) );
ASSERT( (0x27 = arg016[0x00000009]
) );
ASSERT( (0x27 = arg016[0x0000000A]
) );
ASSERT( (0x27 = arg016[0x0000000B]
) );
ASSERT( (0x27 = arg016[0x0000000C]
) );
ASSERT( (0x27 = arg016[0x0000000D]
) );
ASSERT( (0x27 = arg016[0x0000000E]
) );
ASSERT( (0x27 = arg016[0x0000000F]
) );
ASSERT( (0x27 = arg016[0x00000010]
) );
ASSERT( (0x27 = arg016[0x00000011]
) );
ASSERT( (0x27 = arg016[0x00000012]
) );
ASSERT( (0x27 = arg016[0x00000013]
) );
ASSERT( (0x27 = arg016[0x00000014]
) );
ASSERT( (0x27 = arg016[0x00000015]
) );
ASSERT( (0x27 = arg016[0x00000016]
) );
ASSERT( (0x27 = arg016[0x00000017]
) );
ASSERT( (0x27 = arg016[0x00000018]
) );
ASSERT( (0x27 = arg016[0x00000019]
) );
ASSERT( (0x27 = arg016[0x0000001A]
) );
ASSERT( (0x27 = arg016[0x0000001B]
) );
ASSERT( (0x27 = arg016[0x0000001C]
) );
ASSERT( (0x0C = arg016[0x0000001D]
) );
ASSERT( (0x27 = arg016[0x0000001E]
) );
ASSERT( (0x27 = arg016[0x0000001F]
) );
ASSERT( (0x27 = arg016[0x00000020]
) );
ASSERT( (0x27 = arg016[0x00000021]
) );
ASSERT( (0x27 = arg016[0x00000022]
) );
ASSERT( (0x27 = arg016[0x00000023]
) );
ASSERT( (0x27 = arg016[0x00000024]
) );
ASSERT( (0x27 = arg016[0x00000025]
) );
ASSERT( (0x27 = arg016[0x00000026]
) );
ASSERT( (0x27 = arg016[0x00000027]
) );
ASSERT( (0x27 = arg016[0x00000028]
) );
ASSERT( (0x27 = arg016[0x00000029]
) );
ASSERT( (0x27 = arg016[0x0000002A]
) );
ASSERT( (0x27 = arg016[0x0000002B]
) );
ASSERT( (0x27 = arg016[0x0000002C]
) );
ASSERT( (0x27 = arg016[0x0000002D]
) );
ASSERT( (0x27 = arg016[0x0000002E]
) );
ASSERT( (0x27 = arg016[0x0000002F]
) );
ASSERT( (0x27 = arg016[0x00000030]
) );
ASSERT( (0x27 = arg016[0x00000031]
) );
ASSERT( (0x27 = arg016[0x00000032]
) );
%----------------------------------------------------
QUERY( FALSE  );
