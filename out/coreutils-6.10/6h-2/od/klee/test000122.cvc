n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data_stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data_stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin_stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout_stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr713  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3214  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3415  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A_data16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
B_data17  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4518  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6219  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7520  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr821  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7722  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8223  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1224  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9025  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11126  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr11727  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12128  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12229  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr12830  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr13531  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14232  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14333  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr14534  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15035  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15236  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr15837  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16238  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16439  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16940  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17541  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr17642  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18343  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18644  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19945  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A_data_stat1[0x0000000B] @ (A_data_stat1[0x0000000A] @ (A_data_stat1[0x00000009] @ A_data_stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A_data_stat1[0x0000003F] @ (A_data_stat1[0x0000003E] @ (A_data_stat1[0x0000003D] @ (A_data_stat1[0x0000003C] @ (A_data_stat1[0x0000003B] @ (A_data_stat1[0x0000003A] @ (A_data_stat1[0x00000039] @ A_data_stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (B_data_stat2[0x0000000B] @ (B_data_stat2[0x0000000A] @ (B_data_stat2[0x00000009] @ B_data_stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(B_data_stat2[0x0000003F] @ (B_data_stat2[0x0000003E] @ (B_data_stat2[0x0000003D] @ (B_data_stat2[0x0000003C] @ (B_data_stat2[0x0000003B] @ (B_data_stat2[0x0000003A] @ (B_data_stat2[0x00000039] @ B_data_stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin_stat3[0x0000000B] @ (stdin_stat3[0x0000000A] @ (stdin_stat3[0x00000009] @ stdin_stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin_stat3[0x0000003F] @ (stdin_stat3[0x0000003E] @ (stdin_stat3[0x0000003D] @ (stdin_stat3[0x0000003C] @ (stdin_stat3[0x0000003B] @ (stdin_stat3[0x0000003A] @ (stdin_stat3[0x00000039] @ stdin_stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout_stat4[0x0000000B] @ (stdout_stat4[0x0000000A] @ (stdout_stat4[0x00000009] @ stdout_stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout_stat4[0x0000003F] @ (stdout_stat4[0x0000003E] @ (stdout_stat4[0x0000003D] @ (stdout_stat4[0x0000003C] @ (stdout_stat4[0x0000003B] @ (stdout_stat4[0x0000003A] @ (stdout_stat4[0x00000039] @ stdout_stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000001]
))) );
ASSERT( (0x42 = BVSX(arg005[0x00000001],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000002]
))) );
ASSERT( (0x42 = BVSX(arg005[0x00000002],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000003]
))) );
ASSERT( (0x42 = BVSX(arg005[0x00000003],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000004]
))) );
ASSERT( (0x42 = BVSX(arg005[0x00000004],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000005]
))) );
ASSERT( (0x61 = BVSX(arg005[0x00000005],32)
[7:0]
) );
ASSERT( (0x00 = arg005[0x00000006]
) );
ASSERT( (0b1111111 = stdin10[0x00000000][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000001][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000002][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000003][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000004][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000005][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000006][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000007][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000008][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x00000009][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x0000000A][6:0]
) );
ASSERT( (0b1111111 = stdin10[0x0000000B][6:0]
) );
%----------------------------------------------------
QUERY( FALSE  );
